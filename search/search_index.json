{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Your guide to navigating the treacherous journey of software vulnerabilities and standards to effectively prioritize by Risk"},{"location":"cisa_kev/cisa_kev/","title":"CISA KEV","text":"<p>Overview</p> <p>In this section, </p> <p> Source Code </p> <p>Takeaways</p> <p>1. 1. </p>"},{"location":"cisa_ssvc/SSVC/","title":"CISA Stakeholder-Specific Vulnerability Categorization (SSVC)","text":"<p>Overview</p> <p>This section covers CISA Stakeholder-Specific Vulnerability Categorization and how EPSS can be used with it.</p> <p> Source Code </p>"},{"location":"cisa_ssvc/SSVC/#cisa-ssvc","title":"CISA SSVC","text":"<p>CISA Stakeholder-Specific Vulnerability Categorization is proposed as an alternative to CVSS.</p> <p>It is based on CMU SEI (Carnegie Mellon University Software Engineering Institute):</p> <ul> <li>\"Prioritizing Vulnerability Response: A     Stakeholder-Specific Vulnerability Categorization (Version 2.0)\"</li> <li>Coordinated Vulnerability Disclosure User Stories</li> </ul> <p>Quote</p> <p>The authors outline challenges with the Common Vulnerability Scoring System (CVSS) published standard and propose changes to improve it. This paper focuses on common misconceptions and misuses of CVSS. For an alternative system of vulnerability prioritization, see Prioritizing Vulnerability Response: A Stakeholder-Specific Vulnerability Categorization</p> <p>Towards Improving CVSS</p> <p>Quote</p> <p>\u201cCISA encourages every organization to use a vulnerability management framework that considers a vulnerability\u2019s exploitation status, such as SSVC.\u201d</p> <p>https://www.cisa.gov/news-events/news/transforming-vulnerability-management-landscape</p> <p>Quote</p> <p>\u201cThe goal of SSVC is to assist in prioritizing the remediation of a vulnerability based on the impact exploitation would have to the particular organization(s).\u201d</p> <p>https://www.cisa.gov/sites/default/files/publications/cisa-ssvc-guide%20508c.pdf</p> <p></p> CISA SSVC Decision Tree https://www.cisa.gov/ssvc-calculator <p></p> CISA SSVC Decision Tree Decisions https://www.cisa.gov/ssvc-calculator"},{"location":"cisa_ssvc/SSVC/#exploitation-evidence-of-active-exploitation-of-a-vulnerability","title":"Exploitation: Evidence of Active Exploitation of a Vulnerability","text":"<p>Quote</p> <p>\"The intent of this measure is the present state of exploitation of the vulnerability. The intent is not to predict future exploitation but only to acknowledge the current state of affairs. Predictive systems, such as EPSS, could be used to augment this decision or to notify stakeholders of likely changes.\"</p> Value Definition None There is no evidence of active exploitation and no public proof of concept (PoC) of how to exploit the vulnerability. PoC (Proof of Concept) One of the following cases is true: (1) exploit code is sold or traded on underground or restricted fora; (2) a typical public PoC in places such as Metasploit or ExploitDB; or (3) the vulnerability has a well-known method of exploitation. Some examples of condition (3) are open-source web proxies serve as the PoC code for how to exploit any vulnerability in the vein of improper validation of TLS certificates. As another example, Wireshark serves as a PoC for packet replay attacks on ethernet or WiFi networks. Active Shared, observable, reliable evidence that the exploit is being used in the wild by real attackers; there is credible public reporting. <p>Prioritizing Vulnerability Response: A Stakeholder-Specific Vulnerability Categorization</p> <p>Observations</p> <ol> <li>The Exploitation Node comes first in the Decision Tree in line with prioritizing by Exploitation.</li> <li>The order of the Decision Nodes gives the order of importance in making a remediation decision i.e. in this order (see Permutation and Drop Column Importance per Analysis in Source code)<ol> <li>Exploitation</li> <li>Automatable</li> <li>Technical Impact</li> </ol> </li> <li>The output is a Decision that is meaningful to the user e.g. \"Act\" means the \"vulnerability requires immediate attention\".</li> <li>Weaponized Exploits are not called out/supported explicitly i.e. per the Risk Taxonomy section, weaponized exploits are much more likely to be exploited than if the exploit just has a PoC (and there's a significant difference in associated count of CVEs for these populations.)</li> <li>CVSS Base Score Exploitability metrics can be used to inform the \"Automatable\" Node</li> <li>CVSS Base Score Impact metrics can be used to inform the \"Impact\" Node</li> </ol> <p>Takeaways</p> <ol> <li> <p>The order of importance of the risk factors in making a remediation decision is</p> <ol> <li>Exploitation</li> <li>Automatable</li> <li>Technical Impact</li> </ol> </li> </ol>"},{"location":"cisa_ssvc/decision_trees/","title":"Decision Trees Example Usage","text":"<p>Overview</p> <p>Example usage and implementation are provided by different users who are using Decision Trees in their organization.</p> <p> Source Code </p> <p>User Story</p> <p>As Any User, I want to know how to</p> <ol> <li>Make decisions with EPSS as an Exploitation decision node input</li> <li>Determine what threshold(s) to use when making decisions with EPSS     scores</li> </ol> <p>So that I can effectively prioritize which vulnerabilities to fix given my remediation capacity.</p>"},{"location":"cisa_ssvc/decision_trees/#decision-node-exploitation","title":"Decision Node: Exploitation","text":"<p>There are several ways to augment the Exploitation node within SSVC to incorporate EPSS:</p> <ol> <li>Use an EPSS threshold to trigger an \"active\" decision i.e. a CVE     with an EPSS score above this threshold is considered to be actively     exploited</li> <li>Create a new decision called \"predicted\" with its own subsequent     child nodes</li> <li>Use EPSS as an early-warning system to notify stakeholders of an     impending decision change.</li> </ol>"},{"location":"cisa_ssvc/decision_trees/#epss-score-triggers-active-decision","title":"EPSS Score Triggers Active Decision","text":"Exploitation Node: Active, PoC, None"},{"location":"cisa_ssvc/decision_trees/#create-predicted-decision-with-epss-threshold","title":"Create Predicted Decision with EPSS Threshold","text":"Add Predicted Exploitation branch to Exploitation Node <p>See cti.py for the associated code showing how a CTI data source can be used as part of the Exploitation Decision Node.</p>"},{"location":"cisa_ssvc/decision_trees/#append-decisions-with-epss-early-warning","title":"Append Decisions with EPSS Early Warning","text":"<p>User Story</p> <p>As a\u00a0Cyber Defender, I use EPSS to inform my SSVC decision tree with data regarding CVE exploitation in cases where active exploitation has not already been confirmed by another source. I define EPSS thresholds\u00a0that make sense for my organization's risk appetite and capacity to remediate.</p> <p></p> Example Decisions using EPSS Thresholds <p>User Story</p> <p>As a\u00a0Cyber Defender, I occasionally come across vulnerabilities that do not have an assigned CVE, such as a misconfiguration, or manual audit finding. I still want to process these vulnerabilities through my SSVC decision tree to be consistent, which is why I have a manual triage process that fills in the gaps in information, such as Exploitation and Vector, and lets the decision tree handle the rest. I store this information in a CSV so that I don't have to manually process any given vulnerability more than once.</p> Vulnerability ID Exploitation Vector Note 104188 Active AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N/E:H/RL:O/RC:C  SMB Security Signatures Not Required <p>Manual Triage</p> <p>See manual_triage.py code.</p>"},{"location":"cisa_ssvc/decision_trees_from_scratch/","title":"Decision Tree From Scratch","text":"<p>Overview</p> <p>In this section, we walk-through building a Risk-Based Prioritization Decision Tree for use as a first-pass triage of CVEs based on\u00a0https://resources.sei.cmu.edu/asset_files/WhitePaper/2021_019_001_653461.pdf\" rel=\"nofollow\"&gt;CISA SSVC, from scratch, in code.</p> <p>The recipe:</p> <ol> <li>Build a Decision Tree from scratch</li> <li>Find the Decisions (Prioritization) for some vulnerabilities with     CVEs</li> <li>Visualize the flow / distribution of vulnerabilities across our     Decision Tree branches</li> </ol> <p> Source Code </p>"},{"location":"cisa_ssvc/decision_trees_from_scratch/#why-decision-trees","title":"Why Decision Trees?","text":"<ol> <li>Focus on what matters: risk and its constituent factors and what     action needs to be taken when.</li> <li>Understandable.\u00a0</li> <li>Modular: e.g. allows change/customization of Mission &amp; Well-being     Decision Node for an organization. Loose coupling, high cohesion.</li> <li>Decision Tree Analysis can be applied (see source code).</li> <li>Trees gives a very clear visual of all the parameters and decision     nodes e.g. Attack Trees for Threat Modelling. Formulas are opaque,     single output.</li> </ol>"},{"location":"cisa_ssvc/decision_trees_from_scratch/#overview","title":"Overview","text":"<p>Risk is per Asset and depends on Impact of a Vulnerability being exploited by a Threat per\u00a0NIST Special Publication 800-30 r1 Guide for Conducting Risk Assessments.</p> <p>One approach to assess risk is to do multiple passes - starting with a first pass triage of vulnerabilities</p> <ol> <li>First pass: Prioritize Vulnerabilities in an automated way     independent of Asset<ol> <li>Given a list of vulnerabilities, prioritize them given what we     know about the vulnerability from multiple data sources     (independent of the assets i.e. assume a generic asset for risk     purposes for this first pass).</li> </ol> </li> <li>Second pass: Dependent on Asset<ol> <li>There can be MANY independent parameters that determine the risk     associated with an Asset e.g.<ol> <li>Value</li> <li>Exposure e.g. open (to the internet)</li> <li>Reachability - is the vulnerable method called</li> <li>Compensating controls</li> <li>Underlying Stack component versions in place e.g.     SpringShell Spring Framework exploitability depends on     certain JDK versions.</li> </ol> </li> <li>Many of these parameters are generic for the vulnerabilities     associated with the Asset - and are known in advance and fixed     e.g. Asset Value, Asset Exposure.</li> </ol> </li> <li>Some of the parameters will depend on the specific vulnerability and     the pre-conditions it needs to implement the full kill-chain. E.g.     exploitable depending on the configuration or runtime context of the     vulnerable software.</li> </ol> <p>This 2 pass approach allows us to first determine the highest priority vulnerabilities - and then assess these against our highest value/exposure assets.</p> <p>We\u2019ll walk through this First Pass triage - using a Decision Tree to prioritze the vulnerabilities.</p> <ul> <li>We\u2019ll build this Decision Tree from scratch.</li> <li>An extract of the data is shown for each step. So we can see     what\u2019s happening without needing to understand the code</li> <li>A key benfit to Decision Trees is that they are understandable. The     implementation of them should support that too. So the code here     aims for clarity e.g. laid out inline.</li> </ul>"},{"location":"cisa_ssvc/decision_trees_from_scratch/#decision-tree-node-inputs","title":"Decision Tree Node Inputs","text":"Decisions Tree Node Inputs <p>The data sources used\u00a0</p> <ol> <li>Exploitation\u00a0<ol> <li>Active Exploitation: CISA KEV <ol> <li>Commercial CTI data on what CVEs are actively exploited, was     not used in this example because all of the data and source     is provided for the example.</li> </ol> </li> <li>Weaponized Exploits: Metasploit, Nuclei</li> <li>Likelihood of exploit using EPSS above a threshold</li> </ol> </li> <li>Automatable<ol> <li>Using CVSS Base Metric Exploitability parameters (not the score     itself)</li> </ol> </li> <li>Impact<ol> <li>Using CVSS Base Metric Impact parameters (not the score itself)<ol> <li>The Impact parameters Confidentiality, Integrity do not     offer much granularity as discussed in CVSS section.<ol> <li>These could be replaced with other impacts if available     e.g. \"Remote Code Execution\", \"Denial of Service\",     \"Arbitrary File Read\", \"Arbitrary File Write\",...</li> </ol> </li> </ol> </li> </ol> </li> </ol> <p>Tip</p> <p>This Exploitation Decision data can be used for any risk prioritization scheme i.e. not specific to SSVC.</p> <ul> <li>It could be used to inform\u00a0CVSS Exploit Maturity (E)</li> </ul> <p>A venn diagram of these 3 Decision Nodes for all CVSS v3 CVEs shows that \"Exploitation Active\" is a relatively small subset compared to \"Automatable - Yes\" and \"Technical Impact - Total\".</p> <p>This reinforces the guidance to \"prioritize\u00a0vulnerabilities that are being exploited in the wild or are likely to be\"</p> <p></p> Decision Node Output CVE Populations"},{"location":"cisa_ssvc/decision_trees_from_scratch/#decision-tree-output","title":"Decision Tree Output","text":"Decision Tree Output: All CVEs Priority 1:Act, 2:Attend, 3:Track Closely, 4:Track Decision Tree Output: CVEs with EPSS &gt; 0.1: Priority 1:Act, 2:Attend <p>TODO - add priority as text label instead of numeric</p> <p>Observations</p> <ol> <li>The low priority \"Track*\", \"Track\" CVEs are spread across the CVSS     Base score, but have low EPSS scores.</li> <li>Most CVEs have low EPSS scores i.e. the histogram on the right shows     a large count near zero EPSS score.</li> <li>The most common CVSS scores are around 7.5 and 9.8 (per histogram on     top).</li> <li>The top priority \"Act\", \"Attend\" CVEs are spread across the CVSS Base score, and EPSS scores.</li> </ol>"},{"location":"cisa_ssvc/decision_trees_from_scratch/#cves-across-the-decision-tree","title":"CVEs across the Decision Tree","text":"<p>A different way to visualize the Decisions across CVEs is to use a sankey diagram to show how CVEs flow through the tree Decision Nodes</p> <ul> <li>running the source code provided gives an interactive version of the plot</li> </ul> <p></p> Sankey diagram showing the split of All CVEs across the decision tree nodesThe vertical size of the band represents the count of CVEs The color represents the risk e.g. red is high risk. <p>Observations</p> <ol> <li>There's a relatively small subset of CVEs that have<ol> <li>Exploitation - Active</li> <li>Automatable - Yes</li> <li>Technical Impact - Total</li> </ol> </li> <li>This fine granularity and clarity is in stark contrast to the coarse granularity of CVSS ratings</li> <li>The count of CVEs for the highest Decision/Priority is relatively low, and the counts increase as the Decision/Priority decreases i.e. this is very desirable when we want to fix by higest priority first!</li> </ol>"},{"location":"cisa_ssvc/decision_trees_from_scratch/#triage-cves-by-priority","title":"Triage CVEs by Priority","text":"<p>The source code includes a selected list of CVEs to show how easy it is to apply the Decision Tree to a list of CVEs.</p> <p></p> Remediation Decisions/Priority is given for these CVEs <p>Observations</p> <p>We get</p> <ol> <li>Static decisions / priority: (1:Act, 2:Attend, 3:Track Closely, 4:Track)</li> <li>Temporal likelihood of exploitation via EPSS, where EPSS scores can     change depend on observed exploitation activity</li> <li>A way to prioritize per decision / priority e.g. For CVEs     with \"Act\" decision, prioritize based on EPSS score.</li> </ol> <p>Takeaways</p> <ol> <li>The Decision Tree gives give an effective prioritization vs population (in stark contrast to CVSS score or ratings)</li> <li>Applying the Decision Trees to a list of CVEs is a simple 1 liner merge based on CVEs (see source code)</li> <li>We can get the best of both worlds with<ol> <li>static priority decisions based on our Decision Tree output</li> <li>temporal EPSS score</li> </ol> </li> </ol>"},{"location":"cvss/CVSS/","title":"Common Vulnerability Scoring System (CVSS)","text":"<p>Overview</p> <p>The Common Vulnerability Scoring System (CVSS) is widely used in the  cybersecurity industry as a standard method for assessing the \"severity\" of security vulnerabilities.</p> <p>In this section, we analyze CVE CVSS values to understand opportunities for prioritization based on these values:</p> <ul> <li>CVSS Severity Rating</li> <li>CVSS Confidentiality, Integrity, Availability Impacts</li> </ul> <p> Source Code </p>"},{"location":"cvss/CVSS/#cvss-severity-rating-scale","title":"CVSS Severity Rating Scale","text":"<p>Quote</p> <p>\"The use of these qualitative severity ratings is optional, and there is no requirement to include them when publishing CVSS scores. They are intended to help organizations properly assess and prioritize their vulnerability management processes.\"</p> <p> CVSS Rating for all CVEs </p> <p>https://www.first.org/cvss/v3.1/specification-document#Qualitative-Severity-Rating-Scale</p> <p> </p> CVSS Rating for all CVEs <p> </p> CVSS Rating for all CVSS v3 CVEs <p>Observations</p> <ol> <li>~~15% of CVEs are ranked Critical (9+)</li> <li>~~40% of CVEs are ranked High (7.0 - 8.9)</li> <li>~~60% of CVSS v3 CVEs are ranked Critical or High (7+)</li> <li>&gt;96% of CVEs are ranked Medium or higher (4+)</li> </ol> <p>Tip</p> <p>Many organizations use CVSS Scores alone to assess risk despite repeated guidance against this. A Critical or High CVSS Severity is not the same as a Critical or High Risk. There's a &gt;10x difference in counts of CVEs for these 2 groups:</p> <ul> <li>&gt;50% of CVEs are ranked Critical or High CVSS rating (CVSS score 7+)</li> <li>~~5% of CVEs are exploited in the wild</li> </ul> <p>Quote</p> <p>CVSS Base (CVSS-B) scores are designed to measure the severity of a vulnerability and should not be used alone to assess risk. </p> <p>https://www.first.org/cvss/v4.0/user-guide#CVSS-Base-Score-CVSS-B-Measures-Severity-not-Risk</p> <p>Quote</p> <p>PCI DSS 4.0 11.3.2.1 \u201cExternal vulnerability scans are performed after any significant change as follows: Vulnerabilities that are scored 4.0 or higher by the CVSS are resolved.\u201d</p> <p>https://docs-prv.pcisecuritystandards.org/PCI%20DSS/Standard/PCI-DSS-v4_0.pdf</p>"},{"location":"cvss/CVSS/#cvss-confidentiality-integrity-availability-impacts","title":"CVSS Confidentiality, Integrity, Availability Impacts","text":"<p>Quote</p> <ul> <li>The Confidentiality and Integrity metrics refer to impacts that     affect the data used by the service. For example, web content     that has been maliciously altered, or system files that have been     stolen.</li> <li>The Availability impact metric refers to the operation of the     service. That is, the Availability metric speaks to the     performance and operation of the service itself \u2013 not the     availability of the data.\u201d</li> </ul> <p>https://www.first.org/cvss/v3.1/user-guide#3-2-Confidentiality-and-Integrity-Versus-Availability-Impacts</p> <p> </p> Confidentiality Values for CVSS v3 CVEs (HIGH, LOW, NONE) <p> </p> Integrity Values for CVSS v3 CVEs <p> </p> Availability Values for CVSS v3 CVEs (HIGH, LOW, NONE) <p> </p> Counts of Combinations of CIA for CVSS v3 CVEs e.g. CIA_HHH means that Confidentiality Impact is HIGH, Integrity Impact is HIGH, Availability Impact is HIGH <p>Observations</p> <ol> <li>Greater than 50% of CVE Confidentiality Impact, Integrity Impact,     Availability Impact values are HIGH.</li> <li>There are 27 (3x3x3) possible combinations of Confidentiality Impact,     Integrity Impact, Availability Impact and possible HIGH, LOW, NONE     values<ol> <li>~43% of CVSS v3 CVEs have Confidentiality Impact, Integrity     Impact, Availability Impact value of HIGH</li> <li>The top 4 account for 83% of CVSS v3 CVEs</li> </ol> </li> <li>So there isn't much granularity for prioritization based on<ol> <li>CVSS Base Score or Rating</li> <li>CVSS Impact values</li> </ol> </li> </ol>"},{"location":"cvss/CVSS/#count-of-cves-at-or-above-cvss-base-score","title":"Count of CVEs at or above CVSS Base Score","text":"How many CVEs are at/above a given CVSS score?    The continuous line is a polynomial regression of order 2.  <p>Takeaways</p> <ol> <li>Don't use CVSS Base (CVSS-B) scores alone to assess risk - you will waste a LOT of time/effort/$ if you do!</li> <li>CVSS Base (CVSS-B) scores and ratings don't allow for useful prioritization (because there's too many CVEs at the high end)</li> <li>CVSS Confidentiality, Integrity, Availability Impacts don't allow for useful prioritization (because there's too many CVEs with HIGH values)</li> </ol>"},{"location":"epss/Applying_EPSS_to_your_environment/","title":"Applying EPSS to your environment","text":"<p>Overview</p> <p>In this section we look at some of the considerations in interpreting EPSS scores for CVEs in our environment.</p> <p>At the time of writing this guide, CISA Warns of Active Exploitation Apple iOS and macOS Vulnerability. This CVE has a consistently low EPSS score near zero https://api.first.org/data/v1/epss?cve=CVE-2022-48618&amp;scope=time-series.</p>"},{"location":"epss/Applying_EPSS_to_your_environment/#what-does-the-epss-score-actually-mean","title":"What does the EPSS score actually mean?","text":"<p>The EPSS Model ground truth and validation is based on exploitation observations from network- or host-layer intrusion detection/prevention systems (IDS/IPS), and honeypots, deployed globally at scale by the EPSS commercial data partners.</p> <p>The EPSS score is the likelihood the observations will contain a specific CVE in the next 30 days in this \"EPSS Environment\". </p> <p>The EPSS score for a CVE does not depend on count of observations i.e. 1 or many observations results in the same score.</p> <p>If our environment is similar to the environment of the EPSS model then we can assume that similar probability of exploitation activity would apply to our environment, and therefore the EPSS score.  We can apply this score to our environment.</p> <p>Quote</p> <p>Organizations should measure and validate the usefulness of EPSS in their environments. No organization should assume that its environment matches the data used to train EPSS. However, many organizations\u2019 environments should be a near-enough match. </p>"},{"location":"epss/Applying_EPSS_to_your_environment/#remediation-prioritization-for-your-environment","title":"Remediation Prioritization for your Environment","text":"<p>The number of CVEs found in your environment will be a subset of all published CVEs, and will depend on:</p> <ol> <li>the technology stacks in your environment</li> <li>your ability to detect these CVEs</li> </ol> <p>The graph of Coverage vs Efficiency vs Effort is based on CVEs detected in the EPSS Model Environment</p> <p>It does not differentiate between 1 instance of a CVE versus many i.e. in an organization, there may be many instances of a small number of CVEs, and then fewer instances of other CVEs. 1.  E.g. if there's a CVE in a software component that's pervasive     in your organization, there will be many counts of that CVE.\u00a0 2.  Your Remediation effort will be based on the counts per CVEs in     your environment</p>"},{"location":"epss/Applying_EPSS_to_your_environment/#epss-percentile-score-for-your-environment","title":"EPSS Percentile Score for your Environment","text":"<p>Percentiles are a direct transformation from probabilities and provide a measure of an EPSS probability relative to all other scores. That is, the percentile is the proportion of all values less than or equal to the current rank. </p> <p>The EPSS Percentile score is relative to all ~~220K published CVEs that have an EPSS score.</p> <p>A fraction of those CVEs will apply to a typical organization e.g. ~~20K.</p> <p>A user is likely more interested in the EPSS Percentile for their organization - than for all CVEs.</p> <p>A CVE's EPSS Percentile could be e.g. 60% - but in the 90% percentile for the CVEs in the organization (if the organization has few CVEs with high EPSS score).</p> <p>The EPSS Percentile is easily calculated for your organization (based on the subset of CVEs applicable to your organization and their EPSS scores).</p>"},{"location":"epss/Applying_EPSS_to_your_environment/#higher-exploitability","title":"Higher Exploitability","text":"<p>Vulnerabilities that are remotely exploitable (i.e. Network Attack Vector in CVSS Base Score terms) have a higher Exploitability (CVSS Base Score Exploitability metrics group) \u00a0</p> <ol> <li>remotely exploitable versus those that require physical or local     proximity.</li> <li>can be exercised automatically over the network without requiring     user-interaction (e.g. clicking a button or a link).</li> </ol> <p>EPSS is best suited to these types of vulnerabilities.</p> <p>Moreover, the nature of the detection devices generating the events will be biased toward detecting network based attacks, as opposed to attacks from other attack vectors such as host-based attacks or methods requiring physical proximity</p>"},{"location":"epss/Applying_EPSS_to_your_environment/#enterprise-environment","title":"Enterprise Environment","text":"<p>EPSS is best suited to enterprise environments.\u00a0</p> <p>Similarly, these detection systems will be typically installed on public-facing perimeter internet devices, and therefore less suited to detecting computer attacks against internet of things (IoT) devices, automotive networks, ICS, SCADA, operational technology (OT), medical devices, etc</p>"},{"location":"epss/Applying_EPSS_to_your_environment/#false-positives-and-negatives","title":"False Positives and Negatives","text":"<p>Exploitation Observations</p> <p>As with any tool, with these IDS/IPS and honeypot exploitation observations, there will be False Positives (though these are typically low with signature-based detection systems), and False Negatives:</p> <p>any signature-based detection device is only able to alert on events that it was programmed to observe. Therefore, we are not able to observe vulnerabilities that were exploited but undetected by the sensor because a signature was not written</p> <p>The EPSS Model uses the attributes of each vulnerability to predict exploitability (and not the exploitation observations which are for training and validation only)</p> <ul> <li>So if a vulnerability is rated low, that's because it shares     attributes (or lack of attributes) with many of the non-exploited     vulnerabilities.</li> <li>Conversely, if it's rated high, it has shared qualities with     vulnerabilities that have historically been exploited.</li> </ul> <p>This partially compensates for the False Positives and False Negatives from the IDS/IPS and honeypot exploitation observations, and the Exploitation Types and Environment that EPSS is less suited for.</p>"},{"location":"epss/Applying_EPSS_to_your_environment/#references","title":"References","text":"<ol> <li>Enhancing Vulnerability Prioritization: Data-Driven Exploit Predictions with Community-Driven Insights, Feb 2023</li> <li>Probably Don\u2019t Rely on EPSS Yet, Jonathan Spring, June 6, 2022</li> </ol> <p>Takeaways</p> <ol> <li>F</li> </ol>"},{"location":"epss/Count_of_CVEs_by_EPSS/","title":"Count of CVEs by EPSS","text":"<p>Overview</p> <p>As we saw from the Risk section, (and we'll see later in the Vendor and Organizations section), focusing on known exploited, known weaponized exploits, or a significant probability of exploit, is an effective approach to risk mitigation and prevention.</p> <p>In this section</p> <ul> <li>we take an example Remediation Policy for an organization, and see what the impact is of picking an EPSS threshold</li> </ul> <p> Source Code </p>"},{"location":"epss/Count_of_CVEs_by_EPSS/#remediation-policy","title":"Remediation Policy","text":"<p>For this analysis, our policy will be (for our first pass triage independent of business and runtime context):</p> <ol> <li>Remediate vulnerabilities that have\u00a0weaponized exploits or evidence     of exploitation in the wild or in our organization i.e. Weaponized     Exploitation and above in our Likelihood of Exploitation diagram.\u00a0<ol> <li>independent of EPSS score</li> </ol> </li> <li>Remediate CVEs with EPSS score above some threshold<ol> <li>we need to understand the effect of picking a threshold, so we do some analysis...</li> <li>This is the same policy used in our\u00a0back of the napkin Model Remediation Policy, but here we additionally \"remediate\u00a0CVEs with EPSS score above some threshold\".</li> </ol> </li> </ol> <p>Let's assume we'll use the different groups for Likelihood of Exploitation that we defined earlier - and used the data sources we have available to determine the CVEs in each group</p> <ol> <li>Active Exploitation:<ol> <li>CISA KEV</li> </ol> </li> <li>Active Exploitation + Weaponized Exploits:<ol> <li>CISA KEV + Metasploit + Nuclei</li> </ol> </li> <li>Active Exploitation + Weaponized Exploits: + Exploits with Proof     of Concepts:<ol> <li>CISA KEV + Metasploit + Nuclei + ExploitDB</li> </ol> </li> <li>All CVEs</li> </ol> <p>Note</p> <p>A Commercial CTI as used by the author has ~100K CVEs with Exploit PoC (versus the ~25K in the ExploitDB data source we used) so this number is not representative of reality. Users can repeat the analysis with additional data.</p>"},{"location":"epss/Count_of_CVEs_by_EPSS/#count-of-cves-above-epss-value-for-all-cves","title":"Count of CVEs above EPSS value for All CVEs","text":"Plot Type Plot Count of CVEs above EPSS value (Linear scale Y-axis) Count of CVEs above EPSS value (Log scale Y-axis) Count of CVEs above EPSS value (Graph range EPSS 0.01 to 1.0 Linear Scale Y-Axis) <p>Here we're showing the counts of CVEs above EPSS values for the groups (because we want to pick an EPSS threshold above which we would fix the CVEs)</p> <p>Per the policy we defined, we're going to remediate CVEs in CISA KEV and Weaponized (independent of EPSS score). So later we'll remove these from our counts of CVEs above EPSS     values. In other words, subtract the pink line from the blue line in     the graphs above</p> <p>Observations</p> <ol> <li>For All CVEs, and Exploit Proof Of Concept, the vast majority of     CVEs are below some low EPSS score</li> <li>For EPSS &lt; 0.01, the count of CVEs increases significantly so it     makes it harder to see the details for EPSS &gt;= 0.01. So we can     either:<ol> <li>use a Log scale on the Y axis </li> <li>plot only for EPSS &gt;= 0.01, and use a linear y-axis </li> </ol> </li> <li>The plot shows <ol> <li>the count of CVEs above the EPSS value for the given thresholds - because we will fix CVEs above an EPSS value, and we want to see how many we would need to fix based on the EPSS value</li> <li>All CVEs ~220K (our enterprise environment will contain a subset of these)</li> </ol> </li> <li>We can see that below EPSS score of approximately 0.1, there's a     significant increase in the count of CVEs for All CVEs, and Exploit     PoC<ol> <li>in other words, below EPSS score of approximately 0.1, for a small change in EPSS score, there's a very large change in count of CVEs we would need to fix</li> </ol> </li> <li>We can see that between EPSS score of approximately 0.9 and 0.1,     there's a relatively small increase in the count of CVEs as we     decrease EPSS score<ol> <li>in other words, for a large change in EPSS score in the range 0.1 to 0.9, there's a relatively small change in count of CVEs we would need to fix - so picking an EPSS value at or near EPSS 0.1 means we cover a very large range of probability of exploitation for a relatively small increase in the count of CVEs</li> </ol> </li> </ol>"},{"location":"epss/Count_of_CVEs_by_EPSS/#policy-applied-to-an-enterprise","title":"Policy Applied to an Enterprise","text":"<p>Info</p> <p>We know what the shape of the graph looks like for the count of CVEs above EPSS values for All CVEs (~220K) as above.</p> <p>An organization is only concerned with the CVEs in its environment - not all CVEs.</p> <ul> <li>A typical enterprise will have 10K's of CVEs (depending on their     tech stacks and ability to detect CVEs).</li> <li>The ~40K CVEs observed in the Cisco data set across 1000     enterprises likely represents the upper bound because it's the     collation of CVEs from each of the 1000 enterprises.</li> </ul>"},{"location":"epss/Count_of_CVEs_by_EPSS/#monte-carlo-simulation-for-a-typical-enterprise","title":"Monte Carlo Simulation for a Typical Enterprise","text":"<p>Monte Carlo Analysis</p> <p>CVEs in an Organization vs All CVEs</p> <ul> <li>We're more interested in a sample of CVEs (not all CVEs) e.g. the     sample in our organization which will likely be a much smaller     subset of all CVEs.</li> <li>Each organization will have a different subset of CVEs, and this     data is private, so we can't do an analysis of that.</li> <li>A typical enterprise will have ~10K's of CVEs i.e. we know the     counts of CVEs - but not the CVEs themselves.<ul> <li>So we can plot a random sample of that count of CVEs, and repeat     many times to see what the overall plot looks like and if it is     useful.</li> <li>And we can do this for different counts of CVEs e.g. 1K, 11K     (5%) CVEs, or 44K (20%) CVEs</li> </ul> </li> </ul> <p>We need to understand the count of CVEs with EPSS score above some threshold</p> <ol> <li>So we pick a sample of ~40K CVEs</li> <li>But we don't know which ~40K subset of CVEs are relevant for a     typical Enterprise</li> <li>Instead of picking an exact ~40K subset of CVEs, we can pick lots     of ~40K subsets of CVEs randomly, and plot them all.<ol> <li>We would know that any Enterprise with the number of CVEs would be     represented in those plots</li> <li>In other words, Monte Carlo Simulation for a Typical Enterprise</li> </ol> </li> </ol> <p>Recipe</p> <ol> <li>Take random % sample of CVEs\u00a0<ol> <li>where, e.g. 20%, corresponds to ~44K CVEs of ~220K CVEs<ol> <li>where this number is chosen to be close to (but greater than     to give a worst case scenario) the ~40K CVEs observed in     the Cisco data set across 1000 enterprises</li> </ol> </li> </ol> </li> <li>Plot the result</li> <li>Repeat steps 1,2, e.g. 10,000, times<ol> <li>It turns out that the result (shape) i pretty much the same if we repeat     100,000 times</li> </ol> </li> <li>With a large number of iterations (e.g. 10,000), the result is a thick band (composed of 10,000 individual lines)<ol> <li>The gray band represents any and all possible outcomes for the sample.</li> </ol> </li> <li>We apply this recipe to<ol> <li>CVEs: CVEs of different population sizes (# CVEs)</li> <li>CISA KEV and Weaponized CVEs removed (EPSS &gt; 0.01): The same populations <ol> <li>with CISA KEV and Weaponized CVEs removed because we want to see the effect of picking an EPSS threshold and our example policy says we need to fix CISA KEV and Weaponized CVEs anyway</li> <li>with EPSS &gt; 0.01 to zoom in on the detail.</li> </ol> </li> </ol> </li> </ol> # CVEs CVEs CISA KEV and Weaponized CVEs removed (EPSS &gt; 0.01) 0.5% (~1.1K) 5% (~11K) 20% (~44K) <p>Info</p> <p>This analysis is independent of the counts of each CVE in the organization i.e. how many occurrences of each CVE, e.g. CVE-2021-44228, are there in the organization.\u00a0</p> <p>Observations</p> <ol> <li>We can see that below EPSS score of approximately 0.1, there's a     significant increase in the count of CVEs for All CVEs<ol> <li>in other words, for a small decrease in EPSS score, there's a     very large increase in count of CVEs we would need to fix</li> </ol> </li> <li>We can see that between EPSS score of approximately 0.9 and 0.1,     there's a relatively small increase in the count of CVEs as we     decrease EPSS score<ol> <li>in other words, for a large change in EPSS score in the range     0.1 to 0.9, there's a relatively small change in count of CVEs     we would need to fix - so picking an EPSS value at or near EPSS     0.1 means we cover a very large range of probability of exploit</li> <li>in other words, if we're going to fix CVEs with EPSS &gt;= 0.9,     then it doesn't cost us much to fix CVEs with EPSS &gt; 0.1 (while     covering a relatively large range of probability of exploit)</li> </ol> </li> <li>For 0.5% (~1.1K) of CVEs plot, the width of the band for EPSS 0.2 is ~250 and for EPSS 0.9 is ~200 CVEs<ol> <li>For much bigger populations, e.g. 20% (~44K), the width of the band is not much wider (as we'd expect given only a small percentage of CVEs have an EPSS score above 0.1)</li> </ol> </li> </ol> <p>Takeaways</p> <ol> <li>For any organization, a large change in EPSS score in the range 0.1 to 0.9 results in a relatively small change in count of CVEs we would need to fix - for a very large range of probability of exploitation (10%-100%).</li> </ol>"},{"location":"epss/EPSS_Interoperability_with_Vendor_Scoring_Systems/","title":"EPSS Interoperability with Vendor Scoring Systems","text":"<p>Different tool vendors use different vulnerability scoring/ranking methods; some use EPSS.</p> <ul> <li>A full list of vendors using EPSS is given in List of Vendors using     EPSS.</li> </ul> <p>This section of the guide</p> <ol> <li>lists a selection of vendors using EPSS</li> <li>details how some vendors are using EPSS</li> </ol> <p>A lot of vendors support EPSS in their products, but don't say/know how to apply it, and so there's a need for an Applied Guide like this.</p> # Vendor Scoring Uses EPSS as part of scoring 1 Qualys <p>Qualys Vulnerability Score (QVS)\u00a0is a Qualys-assigned score for a vulnerability based on multiple factors associated with the CVE such as CVSS and external threat indicators like active exploitation, exploit code maturity, and many more.</p> 2 Cisco <p>https://blogs.cisco.com/security/epss-and-its-role-in-cisco-vulnerability-management-risk-scoring</p> <p>Kenna Security Vulnerability Risk Score</p> 3 Tenable <p>Tenable\u00a0Vulnerability Priority Rating (VPR) uses the severity and the facility to be exploited, similar to EPSS. See also https://www.tenable.com/blog/you-cant-fix-everything-how-to-take-a-risk-informed-approach-to-vulnerability-remediation</p> 4 Snyk <p>Snyk created their own score\u00a0(Snyk Priority Score) for prioritization by using CVSS and other factors mentioned above, such as exploit maturity, remediation process, or mentions in the community</p> <p>https://snyk.io/blog/improved-risk-assessment-with-epss-scores-in-snyk/</p> 5 MicroSoft  The Exploitability Index may help customers evaluate risk for a vulnerability. Microsoft evaluates the potential exploitability of each vulnerability associated with a Microsoft security update and then publishes the exploitability information as part of the monthly Microsoft security update details  6 Rapid7 <p>Rapid7 created a proprietary scoring methodology called Active Risk. It \"takes into account the latest version of the CVSS available for a vulnerability and enriches it with multiple threat intelligence feeds, including proprietary Rapid7 research, to provide security teams with a threat-aware vulnerability risk score.\" Data sources include: CISA KEV, Metasploit, Rapid7's Project Heisenberg and AttackerKB.https://www.rapid7.com/products/insightvm/features/active-risk-score/</p> <p>https://www.rapid7.com/blog/post/2023/09/25/introducing-active-risk/</p> 7 Wiz.io <p>Created their own binning for EPSS \"to ensure even distribution between critical, high, and medium severities\"</p> 8 Edgescan <p>EPSS is visable as a floating point score (0.00) alongside CVSS, CISAKEV (boolean) and EVSS (Edgescan Validated Security Score).\u00a0 Edgescan has also implemented an overall priority score combining CVSS, EPSS and CISA KEV with some weightings to deliver an overall priority score, we call this the Edgescan eXposure Factor (EXF) - More to come when deployed.</p> <p>https://www.edgescan.com/solutions/risk-based-vulnerability-management-rbvm/</p> 9 Mend.io <p>SCA tool shows CVSS score, EPSS score, and public exploits per https://docs.mend.io/bundle/sca_user_guide/page/public_exploits_in_mend_sca.html</p>"},{"location":"epss/EPSS_and_CISA_KEV/","title":"EPSS and CISA KEV","text":"<p>Overview</p> <p>In this section, we apply interpretation and guidance of EPSS to CISA KEV:</p> <ul> <li>CISA KEV will be used as the reference (source of truth) for active exploitation.</li> <li>CISA KEV is the most known and used catalog of CVEs actively     exploited in the wild, and is publicly available.</li> </ul> <p>We start with analysis via plots and interpretation and code</p> <ul> <li>Analyze the Data Sources relative to CISA KEV</li> <li>Analyze EPSS relative to CISA KEV (and these Data Sources)</li> </ul> <p>Then Jay Jacobs (EPSS) presents analysis and interpretation based on data internal to the EPSS model.</p> <p>User Story</p> <p>As a user, I want to know what CVEs</p> <ol> <li>are actively exploited or likely to be</li> <li>are not actively exploited or not likely to be</li> </ol> <p>So I can focus on what to fix first in my environment.</p> <p>Info</p> <ol> <li>All CVEs in CISA KEV are actively exploited (see criteria for inclusion in CISA KEV)</li> <li>Only ~~10% of exploited CVEs are in CISA KEV</li> <li>Only ~~5% of CVEs are exploited</li> </ol>"},{"location":"epss/EPSS_and_CISA_KEV/#what-does-epss-look-like-for-cisa-kev","title":"What does EPSS look like for CISA KEV?","text":"<p>TODO: redo colors for other</p>"},{"location":"epss/EPSS_and_CISA_KEV/#what-does-epss-look-like-for-cisa-kev-cybersecurity-advisories-csa","title":"What does EPSS look like for CISA KEV CyberSecurity Advisories (CSA)?","text":"<p>Info</p> <p>CISA (Cybersecurity and Infrastructure Security Agency) co authors (with several international cybersecurity agencies) separate Cybersecurity Advisories (CSA) on the Top Routinely Exploited Vulnerabilities from the CISA KEV Catalog e.g.</p> <ol> <li>AA23-215A Joint CSA 2022 Top Routinely Exploited     Vulnerabilities August 2023</li> <li>AA21-209A Joint CSA Top Routinely Exploited     Vulnerabilities July 2021</li> <li>AA22-279A 2022 covering CVEs from 2022, 2021</li> <li>AA22-117A 2022 covering CVEs from 2021</li> <li>AA20-133A 2020     covering CVEs from 2016 to 2019</li> </ol>"},{"location":"epss/EPSS_and_CISA_KEV/#all-cisa-kev-cybersecurity-advisories-csa-top-routinely-exploited-vulnerabilities","title":"All CISA KEV CyberSecurity Advisories (CSA) Top Routinely Exploited Vulnerabilities","text":"<p>Observations</p> <ol> <li>Approximately half of CISA KEV CVEs have an EPSS score near 0.</li> <li>For CyberSecurity Advisories (CSA) Top Routinely Exploited Vulnerabilities CVEs:<ol> <li>Most, but not all, of the CVEs have EPSS scores near 1.0, but some have an EPSS score near 0.</li> <li>13 CVEs of 98 CVEs have EPSS scores &lt;= 0.1</li> <li>Most of the CVEs are weaponized i.e. in metasploit and/or nuclei.</li> </ol> </li> </ol>"},{"location":"epss/EPSS_and_CISA_KEV/#epss-observed-exploitation-activity-compared-to-cisa-kev","title":"EPSS Observed Exploitation Activity Compared to CISA KEV","text":"<p>EPSS probabilities are the direct result of the automated data we receive and collect\u00a0about a vulnerability. KEV is based on (to the best of our knowledge) a list of human curated CVEs with historical exploitation activity. And so given the different data generating processes, it is entirely reasonable that a given CVE would appear on KEV, while also receiving a low EPSS score. Or alternatively, that a CVE would have a high EPSS score, but not appear on KEV.  The EPSS probability is the result of a predictive model trained on previous daily exploitation activity. A higher score indicates the vulnerability is presenting itself (in data) similar to previously and routinely exploited vulnerabilities and conversely a lower score indicates the vulnerability is presenting itself like the vulnerabilities where we, or our data partners, observed less or no exploitation activity. We can see this in the plots below:</p> <p></p> <p></p> <p>In order to understand what we said above, \"A higher score indicates the vulnerability is presenting itself (in data) similar to previously and routinely exploited vulnerabilities and conversely a lower score indicates the vulnerability is presenting itself like the vulnerabilities where we, or our data partners, observed less or no exploitation activity.\" I filtered CVEs down to those just on the KEV and split them into 5 categories based on EPSS score (shown here with the counts in each category):</p> <pre><code>  epss_range\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 count\n1 [0.00042,0.00328] \u00a0 206\n2 (0.00328,0.0279]\u00a0 \u00a0 203\n3 (0.0279,0.896]\u00a0 \u00a0 \u00a0 205\n4 (0.896,0.972] \u00a0 \u00a0 \u00a0 204\n5 (0.972,0.976] \u00a0 \u00a0 \u00a0 205\n</code></pre> <p>We can then look at the proportion of CVEs in each category with specific attributes EPSS derived from data about those vulnerabilities:</p> <p></p>"},{"location":"epss/EPSS_and_CISA_KEV/#comparison-of-prioritizing-remediation-of-cisa-kev-cves-using-epss-and-cvss","title":"Comparison of Prioritizing Remediation of CISA KEV CVEs using EPSS and CVSS","text":"<p>Now let's assume that KEV is perfect. Only the CVEs on the KEV List will be exploited this month and those are the only ones you want to prioritize.\u00a0 How would EPSS and CVSS compare in that case?\u00a0 If you start at the top of each scoring system and remediate everything going down the scoring range, how many do you have to prioritize before you close all or even \"most\" of the CVEs?\u00a0</p> <p></p> <p>Left to right represents the amount of effort (percent of all published CVEs) that is prioritized as you move down the scoring system.</p> <p>Bottom to top represents the amount of \"coverage\" for the KEV list.</p> <p>As we put in more effort (prioritize more CVEs) we will cover more and more of the KEV CVEs, so as the lines move from left to right, we (the defenders) are prioritizing more and more CVEs and getting better coverage of CVEs on the KEV. The dashed lines represent 50% effort (the vertical dashed line) and 50% KEV coverage (horizontal dashed line).\u00a0</p> <p>We can create the same type of plot as the last one with some other variables to see what kind of separation EPSS offers over a straight CVSS base score.</p> <p></p> <p>Observations</p> <ol> <li>Closest to the top left is best i.e. the CVEs on the List/Tool are prioritized more than all published CVEs. </li> <li>e.g Using EPSS, Metasploit CVEs (weaponized exploits) are prioritized much better than all published CVEs (much better than using CVSS).</li> </ol> <p>Takeaways</p> <ol> <li>EPSS does better at prioritizing exploited CVEs (those on CISA KEV) than CVSS, which is what we'd expect as the CVSS Base Score is not a good predictor of exploitation per the Understanding Risk chapter.</li> <li>Some CVEs on CISA KEV have a low EPSS score. </li> <li>Some CVEs with a high EPSS score are not on CISA KEV.</li> </ol> <p>Quote</p> <p>If there is evidence that a vulnerability is being exploited, then that information should supersede anything EPSS has to say, because again, EPSS is pre-threat intel. If there is an absence of exploitation evidence, then EPSS can be used to estimate the probability it will be exploited.\" https://www.first.org/epss/faq</p>"},{"location":"epss/Introduction_to_EPSS/","title":"Introduction to EPSS","text":"<p>Overview</p> <p>In this section we introduce EPSS</p> <ul> <li>what it is and what it gives us</li> <li>why we should care </li> <li>a plot of EPSS scores for all CVEs</li> </ul>"},{"location":"epss/Introduction_to_EPSS/#what-is-epss","title":"What is EPSS?","text":"<p>Exploit Prediction Scoring System (EPSS) is a data-driven effort for estimating the likelihood (probability) that a software vulnerability will be exploited in the wild. The Special Interest Group (SIG) consists of over 400 researchers, practitioners, government officials, and users who volunteer their time to improve this industry standard. EPSS is managed under FIRST (https://www.first.org/epss), the same international non-profit organization that manages the Common Vulnerability Scoring System (CVSS), https://www.first.org/cvss/.</p> <ul> <li>EPSS produces probability scores for all known published CVEs based on current     exploitation ability, and updates these scores daily</li> <li>The scores are free for anyone to use\u00a0\u00a0</li> <li>EPSS should be used:<ul> <li>as a measure of the threat aspect of risk</li> <li>when there is no other evidence of current exploitation</li> <li>together with other measures of risk</li> </ul> </li> <li>EPSS is best suited to vulnerabilities that are remotely exploitable     in enterprise environments.</li> </ul>"},{"location":"epss/Introduction_to_EPSS/#why-should-i-care","title":"Why Should I Care?","text":"<p>Tip</p> <p>Prioritizing vulnerabilities that are being exploited in the wild, or are more likely to be exploited, reduces the</p> <ol> <li>cost of vulnerability management</li> <li>risk by focusing on the vulnerabilities that need to be fixed first</li> </ol> <p>Quote</p> <ul> <li> <p>\"many vulnerabilities classified as     \u201ccritical\u201d are highly complex and have never been seen exploited in     the wild - in fact, less than 4% of the total number of CVEs have     been publicly exploited\" (see BOD 22-01: Reducing the Significant Risk of Known Exploited Vulnerabilities).</p> <p>Cybersecurity and Infrastructure Security Agency emphasizes prioritizing remediation of\u00a0vulnerabilities that are known exploited in the wild.</p> </li> <li> <p>\"As a     top priority, focus your efforts on patching the vulnerabilities     that are being exploited in the wild or have competent compensating     control(s) that can. This is an effective approach to risk     mitigation and prevention, yet very few organizations do this. This     prioritization reduces the number of vulnerabilities to deal with.     This means you can put more effort into dealing with a smaller     number of vulnerabilities for the greater benefit of your     organization's security posture.\"\u00a0</p> <p>Gartner </p> </li> </ul>"},{"location":"epss/Introduction_to_EPSS/#how-many-vulnerabilities-are-being-exploited","title":"How Many Vulnerabilities are Being Exploited?","text":"<p>Only about 5% or fewer of all CVEs have been exploited</p> <ul> <li>\u201cLess than 3% of vulnerabilities have weaponized exploits or     evidence of exploitation in the wild, two attributes posing the     highest risk,\u201d Qualys</li> <li>\u201cOnly 3 percent of critical vulnerabilities are worth prioritizing,\u201d     https://www.datadoghq.com/state-of-application-security/</li> <li>\u201cLess than 4% of the total number of CVEs have been publicly     exploited\u201d, CISA KEV</li> <li>\u201cWe observe exploits in the wild for 5.5% of vulnerabilities in our     dataset,\u201d FIRST</li> </ul> <p>In contrast, for CVSS:</p> <ul> <li>~15% of CVEs are ranked Critical (9+)</li> <li>~65% of CVEs are ranked Critical or High (7+)</li> <li>~96% of CVEs are ranked Critical or High or Medium (4+)</li> </ul>"},{"location":"epss/Introduction_to_EPSS/#what-vulnerabilities-are-being-exploited","title":"What Vulnerabilities are Being Exploited?","text":"<p>There isn't an authoritative common public list of ALL CVEs that are Known Actively Exploited in the wild</p> <ol> <li>CISA Known Exploited Vulnerabilities Catalog (CISA KEV) is a source of vulnerabilities that have been exploited in the wild<ol> <li>CISA KEV contains ~~10% of known exploited CVEs currently but is growing</li> <li>There's ~~1K CVEs in CISA KEV, while there are ~~220K published CVEs, and ~~5% of CVEs are known exploited</li> </ol> </li> <li>There are numerous Cyber Threat Intelligence sources e.g. vendors, publicly available data </li> <li>EPSS provides a probability of exploitation for all CVEs (in the next 30 days)</li> </ol>"},{"location":"epss/Introduction_to_EPSS/#what-can-epss-do-for-me","title":"What Can EPSS Do For Me?","text":"<ul> <li>EPSS allows network defenders to better (de)prioritize remediation     of published CVEs for your organization based on likelihood of     exploitation, while providing you the information you need to inform     the prioritization trade-offs.</li> <li>EPSS is useful for product security (PSIRT) teams when prioritizing     vulnerabilities found within their own products when there is a     known CVE.</li> <li>EPSS data and trends are useful for researchers looking to better     understand and explain vulnerability exploitation specifically, and     malicious cyber activity more generally.</li> <li>EPSS can be used by regulators and policy makers when defining patch     management requirements.</li> <li>(More detailed User Scenarios for different Personas (written by     real users in that role) are provided in AnnexRequirements.)</li> </ul>"},{"location":"epss/Introduction_to_EPSS/#what-does-epss-provide","title":"What Does EPSS Provide?","text":"<ol> <li>EPSS Score<ol> <li>Probability scores for all known CVEs. Specifically, the     probability that each vulnerability will be exploited in the     next 30 days.</li> <li>Percentile<ol> <li>The percentile scores represent a rank ordered list of all CVEs from most     likely to be exploited, to least likely to be exploited</li> </ol> </li> </ol> </li> <li>Coverage, Efficiency, Effort figure showing the tradeoffs     between alternative remediation strategies.<ol> <li>Specifically, this figure illustrates the tradeoffs between     three key parameters that you may use when determining your     optimal remediation strategy: coverage, efficiency, and level of     effort\u00a0</li> </ol> </li> </ol>"},{"location":"epss/Introduction_to_EPSS/#count-of-cves-at-or-above-epss-score","title":"Count of CVEs at or above EPSS Score","text":"<p>In stark contrast to CVSS Base Scores and Ratings, (which are top heavy - most CVEs at the upper end of Severity), EPSS is bottom heavy (the vast majority of CVEs have a low EPSS score).</p> <p> </p>  How many CVEs at a given EPSS score?   <p> </p>  How many CVEs above an EPSS score (substract the Percentile Rank from 100% to get the answer in % terms)Image from https://www.first.org/epss/articles/prob_percentile_bins"},{"location":"epss/Introduction_to_EPSS/#using-epss-with-known-exploitation","title":"Using EPSS with Known Exploitation","text":"<p>Quote</p> <p>If there is evidence that a vulnerability is being exploited, then that information should supersede anything EPSS has to say, because again, EPSS is pre-threat intel. If there is an absence of exploitation evidence, then EPSS can be used to estimate the probability it will be exploited.\" https://www.first.org/epss/faq</p> <p> </p>  Using EPSS with Known Exploitation  <p>Takeaways</p> <ol> <li>Prioritizing vulnerabilities that are being exploited in the wild, or are more likely to be exploited, reduces the<ol> <li>cost of vulnerability management</li> <li>risk by focusing on the vulnerabilities that need to be fixed first</li> </ol> </li> <li>EPSS provides <ol> <li>a score for all published CVEs on how likely they are to be exploited (in the next 30 days)</li> <li>information on tradeoffs on coverage, efficiency, and level of    effort</li> </ol> </li> </ol> <p>Quote</p> <p>If there is evidence that a vulnerability is being exploited, then that information should supersede anything EPSS has to say, because again, EPSS is pre-threat intel. If there is an absence of exploitation evidence, then EPSS can be used to estimate the probability it will be exploited.\" https://www.first.org/epss/faq</p>"},{"location":"includes/plots_cvss_epss/","title":"Plots cvss epss","text":"<p>Info</p> <ol> <li>The dot colors indicate what population the CVE is associated with e.g. if the CVE is red, then it's in CISA KEV:<ol> <li>red: CISA KEV</li> <li>purple: both metasploit and nuclei</li> <li>orange: metasploit only</li> <li>yellow: nuclei only</li> <li>green: exploitdb only, and not in metasploit or nucle</li> </ol> </li> <li>The histogram on top represents the counts of CVEs (in bins) at that CVSS BaseScore.</li> <li>The histogram on the right represents the counts of CVEs (in bins) at that EPSS Score.</li> </ol>"},{"location":"includes/vulns_exploited/","title":"Vulns exploited","text":""},{"location":"includes/vulns_exploited/#why-should-i-care","title":"Why Should I Care?","text":"<p>Tip</p> <p>Prioritizing vulnerabilities that are being exploited in the wild, or are more likely to be exploited, reduces the</p> <ol> <li>cost of vulnerability management</li> <li>risk by focusing on the vulnerabilities that need to be fixed first</li> </ol> <p>Quote</p> <ul> <li> <p>\"many vulnerabilities classified as     \u201ccritical\u201d are highly complex and have never been seen exploited in     the wild - in fact, less than 4% of the total number of CVEs have     been publicly exploited\" (see BOD 22-01: Reducing the Significant Risk of Known Exploited Vulnerabilities).</p> <p>Cybersecurity and Infrastructure Security Agency emphasizes prioritizing remediation of\u00a0vulnerabilities that are known exploited in the wild.</p> </li> <li> <p>\"As a     top priority, focus your efforts on patching the vulnerabilities     that are being exploited in the wild or have competent compensating     control(s) that can. This is an effective approach to risk     mitigation and prevention, yet very few organizations do this. This     prioritization reduces the number of vulnerabilities to deal with.     This means you can put more effort into dealing with a smaller     number of vulnerabilities for the greater benefit of your     organization's security posture.\"\u00a0</p> <p>Gartner </p> </li> </ul>"},{"location":"includes/vulns_exploited/#how-many-vulnerabilities-are-being-exploited","title":"How Many Vulnerabilities are Being Exploited?","text":"<p>Only about 5% or fewer of all CVEs have been exploited</p> <ul> <li>\u201cLess than 3% of vulnerabilities have weaponized exploits or     evidence of exploitation in the wild, two attributes posing the     highest risk,\u201d Qualys</li> <li>\u201cOnly 3 percent of critical vulnerabilities are worth prioritizing,\u201d     https://www.datadoghq.com/state-of-application-security/</li> <li>\u201cLess than 4% of the total number of CVEs have been publicly     exploited\u201d, CISA KEV</li> <li>\u201cWe observe exploits in the wild for 5.5% of vulnerabilities in our     dataset,\u201d FIRST</li> </ul> <p>In contrast, for CVSS:</p> <ul> <li>~15% of CVEs are ranked Critical (9+)</li> <li>~65% of CVEs are ranked Critical or High (7+)</li> <li>~96% of CVEs are ranked Critical or High or Medium (4+)</li> </ul>"},{"location":"includes/vulns_exploited/#what-vulnerabilities-are-being-exploited","title":"What Vulnerabilities are Being Exploited?","text":"<p>There isn't an authoritative common public list of ALL CVEs that are Known Actively Exploited in the wild</p> <ol> <li>CISA Known Exploited Vulnerabilities Catalog (CISA KEV) is a source of vulnerabilities that have been exploited in the wild<ol> <li>CISA KEV contains ~~10% of known exploited CVEs currently but is growing</li> <li>There's ~~1K CVEs in CISA KEV, while there are ~~220K published CVEs, and ~~5% of CVEs are known exploited</li> </ol> </li> <li>There are numerous Cyber Threat Intelligence sources e.g. vendors, publicly available data </li> <li>EPSS provides a probability of exploitation for all CVEs (in the next 30 days)</li> </ol>"},{"location":"introduction/Foreword_Dialogue/","title":"Foreword Dialogue","text":"<p>User A: Hey, have you ever noticed the difference between CVSS and EPSS standards when it comes to vulnerability rankings and thresholds? I did some research, and I found out that around 15% of CVEs are ranked as Critical according to CVSS, while about 40% are considered High.</p> <p>User B: Wow, those numbers are pretty high for CVSS. But what about EPSS?</p> <p>User A: Well, that's where it gets interesting. With a lower EPSS threshold of 0.1, you're left with only about 5% of CVEs. It's actually quite in line with the fact that around 5% of CVEs are actively exploited, which is why standards like CISA KEV and EPSS are so relevant.</p> <p>User B: That's a good point. So, if I understand correctly, EPSS prioritizes the vulnerabilities differently. How does it break down?</p> <p>User A: Yes, you got it. Interestingly, with EPSS, about 5% are considered \"Not Low,\" while a whopping 95% fall into the \"Low\" category (where \"Low\" is below the EPSS threshold of 0.1). On the other hand, with CVSS it's almost the opposite. A striking 96% of CVEs fall into the \"Not Low\" category, which includes Critical, High, and Medium severity levels. Only 4% are considered \"Low\" according to CVSS.</p> <p>User B: So, what's the big question here? Does a user who's used to prioritizing 15/60/96% of CVEs with CVSS rankings really need to further sub-divide that 5% according to EPSS?</p> <p>User A: Precisely! It makes you wonder if the extra granularity provided by EPSS for that small percentage is truly necessary, considering the broader categorization provided by CVSS. It's an interesting perspective to consider when assessing vulnerabilities.</p> <p>User B: Absolutely. It highlights the importance of understanding both standards and their implications when it comes to managing vulnerabilities effectively.</p>"},{"location":"introduction/Introduction/","title":"Introduction","text":"<p>About this Guide</p> <p>This Risk Based Prioritization Guide is a pragmatic user-centric view of risk, the related standards and data sources, and how you can apply them for an effective Risk Based Prioritization for your organization.</p> <p>It is written by, or contributed to, some of the thought leaders in this space for YOU.</p> <p>CISA, Gartner and others, recommend focusing on vulnerabilities that are known-exploited as an effective approach to risk mitigation and prevention, yet very few organizations do this. Maybe because they don't know they should, why they should, or how they should? This guide will cover all these points.</p> <p>After reading this guide you should be able to</p> <ol> <li>Understand Risk <ol> <li>the main standards and how they fit together</li> <li>the key risk factors, especially known exploitation or likelihood of exploitation</li> </ol> </li> <li>Prioritize CVEs by Risk<ol> <li>apply this understanding to Prioritize CVEs by Risk for your organization resulting in<ol> <li>a significant reduction in your security effort</li> <li>a significant improvement in your security posture by remediating the higher risk vulnerabilities first</li> </ol> </li> </ol> </li> <li>Apply the provided guidance to your environment<ol> <li>the source code used to do much of the analysis in this guide is provided - so you can apply it to your internal data</li> <li>compare what other users, and tool vendors, are doing for Risk Based Prioritization so you can compare it to what you're doing</li> <li>ask more informed questions of your tool/solution provider</li> </ol> </li> </ol>"},{"location":"introduction/Introduction/#overview","title":"Overview","text":"<p>The guide covers:</p> <ol> <li>Risk<ol> <li>The Vulnerability Landscape covering the main standards and how they fit together</li> <li>What these standards and risk factors look like for different populations of CVEs</li> <li>How to use the standards and data sources in your environment</li> </ol> </li> <li>How the standards and data sources are being used using real examples<ol> <li>How some vendors are using them in their tools</li> <li>How some users are using them in their environments</li> </ol> </li> <li>Applying all this for Risk Based Prioritization </li> </ol> <p>Tip</p> <p> on a menu item indicates the content is more hands on - applying the content from the guide.</p> <p>\"\ud83e\uddd1\u200d\ud83d\udcbb Source Code\" on a page is a link to the source code used to generate any plots or analysis on public data.</p>"},{"location":"introduction/Introduction/#intended-audience","title":"Intended Audience","text":"<p>The intended audience is people in these roles:</p> <ul> <li>Product Engineer: the technical roles: Developer, Product Security, DevSecOps</li> <li>Security Manager: the non-technical business roles: includes CISO</li> <li>Cyber Defender: network defenders,  IT/infosec</li> <li>Tool Provider: Tool providers: Tool Vendors, open source tools,...</li> </ul> <p>This is a subset of the Personas/Roles defined in the Requirements chapter.</p> <p>No prior knowledge is assumed to read the guide - it provides just enough information to understand the advanced topics covered.</p> <p>A basic knowledge of Jupyter Python is required to run the code (with the data provided or on your data).</p>"},{"location":"introduction/Introduction/#how-to-use-this-guide","title":"How to Use This Guide","text":"<ol> <li>For the short version, read these sections and understand the Risk Based Prioritization Models:<ol> <li>Risk (back of the napkin model)</li> <li>Vendors - Qualys (Qualys scoring applied with EPSS)</li> <li>Organizations - Yahoo (Decision Trees)</li> </ol> </li> <li>For a deeper understanding read the full guide.</li> <li>To get the most out of this guide, also play with the code - and analyze your data.</li> </ol> <p>Each of the Risk Based Prioritization Models above use similar risk factors (known exploitation and likelihood of exploitation, with variants of CVSS base metrics parameters or scores) but in very different ways to rank/score the risk/priority. The outcome is the same - a much more granular prioritization at the high end of risk than offered by CVSS.</p> <p>If you're looking for the \"easy button\", or the one scheme to rule them all for Risk Based Prioritization, you won't find it (here or anywhere else).</p>"},{"location":"introduction/Introduction/#how-to-contribute-to-this-guide","title":"How to Contribute to This Guide","text":"<p>You can contribute content or suggest changes via a Github PR or comment TODO insert link.</p> <p>Multiple independent data and reference inputs would really help:</p> <ul> <li>If you're a tool/solution vendor, and would like to provide anonymized, sanitized data - or what scoring system you use and why</li> <li>If you'd like to share what your organization is doing (anonymized, sanitized as required) as a good reference example</li> </ul>"},{"location":"introduction/Introduction/#foreword-by-chris-madden","title":"Foreword by Chris Madden","text":"<p>I embarked on this Risk Based Prioritization journey because, as a Product Security engineer, my role is to enable the flow of software/value to our customers by helping deliver high quality software efficiently and securely.</p> <p>A large part of that was to be able to prioritize vulnerabilities by Real Risk. Lots of dumb questions and data analysis later, this guide represents the distillation of that knowledge into a user-centric system view - what I wish I knew before I started - and learnt by interacting with other users, standards groups, and tool vendors. There's a friendly vibrant community in this space.</p>"},{"location":"introduction/Introduction/#source-code","title":"Source Code","text":"<ol> <li>See https://github.com/epss-sig/epss-interoperability TODO     for the code<ol> <li>This includes the data used in the analysis (downloaded     Jan 13) and how to download it</li> </ol> </li> <li>This code is licensed under the Apache 2 Open Source License.</li> </ol>"},{"location":"introduction/Introduction/#notes","title":"Notes","text":"<ol> <li> <p>This guide is not affiliated with any Tool/Company/Vendor/Standard/Forum/Data source. </p> <ol> <li>Mention of a vendor in this guide is not a recommendation or endorsement of that vendor. <ol> <li>The choice of vendors was determined by different contributors who had an interest in that vendor.</li> </ol> </li> </ol> </li> <li> <p>This guide is a living document i.e. it will change and grow over time - with your input.</p> </li> </ol>"},{"location":"introduction/Introduction/#alternative-or-additional-guidance","title":"Alternative or Additional Guidance","text":"<p>The \"writing style\" in this guide is \"succinct and opinionated\" i.e. data analysis plots (with source code where possible) and observations and takeaways that you can assess against your data and environment.</p> <p>It is not a verbose treatment of topics with broader or background context. For that, consider the following (no affiliation to the author): </p> <ul> <li>Effective Vulnerability Management: Managing Risk in the Vulnerable Digital Ecosystem </li> </ul>"},{"location":"introduction/Scope/","title":"Scope","text":"<p>Scope of this Guide</p> <p>The scope for this guide is </p> <ol> <li>CVEs only - not vulnerabilities that don't have CVEs, not Zero Days  (until they get a CVE)</li> <li>Per Vulnerability - not asset/business/runtime/other organization-specific context</li> </ol>"},{"location":"introduction/Scope/#cves","title":"CVEs","text":"<p>Not all vulnerabilities or exploits have CVEs.</p> <p>However, many do, and we can use the data associated with a CVE for Risk Based Prioritization.</p>"},{"location":"introduction/Scope/#per-vulnerability","title":"Per Vulnerability","text":"<p>The scope is  - \"Per Vulnerability\" branch in the diagram below - Generic vulnerability data - not the organization-specific context</p> <p>A different way of looking at this is that this guide can be used as a first pass triage and prioritization of vulnerabilities, before the overall asset-specific business and runtime context, and remediation context, is considered, and all the context-specific dependencies that go with that.</p> <p></p> The scope for this guide is the \"Per Vulnerability\" branch <p></p> The scope for this guide is up to and including the First Pass Triage <p>Tip</p> <p>Indepdendent of the Risk Based Prioritization in this guide:</p> <ul> <li>Good Security hygiene e.g. keeping software up to date, is effective in preventing and remediating vulnerabilities.</li> <li>Understanding your vulnerability data, and root causes, should inform your remediation.</li> </ul> <p>Tip</p> <p>A more complete picture of Risk Remediation Asset and Remediation branches is shown below. </p> <ul> <li>While these are out of scope for this guide, it may be useful as a reference for your Risk Remedation.</li> </ul> <p></p> Risk Remedation Taxonomy"},{"location":"introduction/code_and_data/","title":"Source Code and Data","text":""},{"location":"introduction/contributors/","title":"Contributors","text":"<p>Thanks to all who contributed! </p> <p>Many experts volunteered their time and knowledge to this guide - and for that we all benefit and are truly grateful!</p> <p>In alphabetical order by first name:</p> <ul> <li>Aruneesh Salhotra\u00a0</li> <li>Buddy Bergman\u00a0</li> <li>Chris Madden</li> <li>Christian Heinrich</li> <li>Denny Wan\u00a0</li> <li>Derrick Lewis</li> <li>Jay Jacobs\u00a0</li> <li>Jerry Gamblin\u00a0</li> <li>Jonathan Spring</li> <li>Joseph Manahan\u00a0</li> <li>Maor Kuriel\u00a0</li> <li>Sasha Romanosky\u00a0</li> <li>Stephen Shaffer</li> <li>Steve Finegan</li> </ul>"},{"location":"organizations/Organization_CVSS_CISA_KEV_EPSS/","title":"Organization CVSS CISA KEV EPSS","text":"<p>This organization operates in a regulated environment (e.g. PCI or FedRAMP) that requires usage of CVSS.</p> <ul> <li>e.g. PCI DSS 4.0 11.3.2.1 \u201cExternal vulnerability     scans are performed after any significant change as follows:     Vulnerabilities that are scored 4.0 or higher by the CVSS are     resolved.\u201d</li> </ul> <p>A CVEs \"scored 4.0 or higher by the CVSS\" is pretty much all CVEs (&gt;96%) per \"CVSS Severity Rating Scale\"</p> <p>The organization uses CVSS score and \"Likelihood of Exploit\" to prioritize CVEs for the CVSS threshold required by regulation. Specifically it uses:</p> <ol> <li>CVSS Score</li> <li>Active Exploitation<ol> <li>CISA KEV</li> <li>Vendor Cyber Threat Intelligence for CVEs that are actively     exploited that are not in CISA KEV</li> </ol> </li> <li>Weaponized Exploitation<ol> <li>Vendor Cyber Threat Intelligence for CVEs that are weaponized     that includes public information from Metasploit, Nuclei.</li> </ol> </li> <li> <p>EPSS scores above a Threshold</p> </li> <li> <p>complete\u00a0</p> </li> </ol>"},{"location":"organizations/Yahoo/","title":"Yahoo","text":"<p>Overview</p> <p>Yahoo is a large Media, Social, Internet enterprise.</p> <p>It has a mature DevOps and data analysis capability.</p> <p>Simplified representative views are presented below.</p> <p>The content is based on what was presented at BSidesDublin 2023:</p> <p></p> <p> </p> Ref https://cloudsecurityalliance.org/artifacts/devsecops-automation/  <p>3 R's to address Risk Effectively</p>"},{"location":"organizations/Yahoo/#3-rs-to-address-risk-effectively","title":"3 R's to address Risk Effectively","text":"<p>Rather than playing whack-a-mole with vulnerabilities, the following 3 independent steps are applied to focus on what needs to be fixed first (where each step on its own gives a very significant reduction in CVEs to fix):</p> <ol> <li>Root Cause<ol> <li>Do some initial easy Exploratory Data Analysis to understand the     root causes of CVEs in the DevOps pipeline i.e. find the source     of the moles and address them.\u00a0<ol> <li>One Programming Language in particular accounted for a very     significant proportion of CVEs<ol> <li>This was due to the Open Source dependencies for this     programming language not being up to date</li> </ol> </li> <li>By updating dependencies (automatically), the number of CVEs     reduced very significantly over time!</li> </ol> </li> <li>Addressing the root cause avoids playing whack-a-mole by     eliminating the source of the moles</li> </ol> </li> <li>Reachability<ol> <li>Some (SCA (Software Composition Analysis) and image scan) tools     support reachability analysis that indicate if a vulnerability     in the vulnerable dependency is actually called by the App code     or not<ol> <li>in general, a significant number of CVEs reported by     SCA, image scanners are not reachable.</li> </ol> </li> <li>There are also tools that check Network reachability of vulnerabilites,      and some validate exploitability.</li> </ol> </li> <li>Risk Based Prioritization<ol> <li>As seen throughout this guide,\u00a0focusing on CVEs that are, or are     likely to be, exploited, gives a very significant reduction in     CVEs to fix and associated effort!</li> </ol> </li> </ol>"},{"location":"organizations/Yahoo/#risk-based-prioritization","title":"Risk Based Prioritization","text":"<p>https://github.com/theparanoids/PrioritizedRiskRemediation gives the background and detail to this section.</p> <p>A Risk Remediation Taxonomy is defined here to support Risk Based Prioritization of CVEs:</p> <ul> <li>the constituent components of risk and remediation for a CVE</li> <li>the associated data sources for these components</li> </ul> <p>A Risk-based Decision Tree is defined with</p> <ul> <li>inputs for the Decision Tree Decision Nodes</li> <li>output Decisions</li> </ul> <p>The Risk Remediation Taxonomy and Decision Tree are part of a conference presentation by Yahoo Chris Madden:\u00a0https://www.bsidesdub.ie/\u00a0May 27 2023.</p> <ul> <li>See the\u00a0slide     deck\u00a0and     the\u00a0recording.</li> </ul>"},{"location":"organizations/Yahoo/#cves-cvss-scores-counts-of-cves-epss-scores","title":"CVEs CVSS scores, counts of CVEs, EPSS scores","text":"<p>The counts of a specific CVE in an organization are a relevant part of Risk Based Prioritization.</p> <p>The data from different tools across the DevOps pipeline shows there are paretos i.e. a relatively small number of unique CVEs account for a large number of overall CVEs per https://youtu.be/oMZN810xfck?t=896.</p> <p> </p>  Plot of CVEs CVSS scores, counts of CVEs, EPSS scores The plots are based on real data (the pattern is the same whether 1 or several tools in the DevOps pipeline are viewed, or an aggregate of CVEs across those tools)."},{"location":"organizations/Yahoo/#decision-trees-and-multiple-data-sources-to-get-more-targeted-prioritization","title":"Decision Trees and Multiple Data Sources to get more Targeted Prioritization","text":"<p>The \"Decision Tree From Scratch\" section gives a simplified view of the Decision Tree used.</p> <p>Using the same real data, using CVSS Base Parameters (not CVSS Score), and combining EPSS with CISA KEV and other industry and internal threat intelligence using Decision Trees based on CISA SSVC.</p> <p>The Decision Tree is similar to the \"Decision Tree from Scratch\" example code provided but</p> <ol> <li>additionally uses commercial CTI for Exploitation</li> <li>uses other sources of Impact (because CVSS Base Score Impact     Confidentiality, Integrity, Availability do not offer enough     granularity)</li> </ol> <p> </p> <p>Observations</p> <ol> <li>There's a concentration of CVEs in the lower EPSS range below 0.1.</li> <li>The CVSS score distribution is typical in industry</li> <li>The EPSS score (temporal) can be used in conjunction with the static decisions to prioritize across a decision band.</li> </ol>"},{"location":"organizations/acme/Applied/","title":"Putting it all Together","text":"<p>sample of CVEs and counts percentile score 3d plot of sources, counts cvss, epss (sliders)</p> <p>input will be a list of CVEs, with optional counts of these, this will be generated semi-automatically</p> <p>@Jay Jacobs (Cyentia)  any guidance on picking a variable and associated distribution to sample all CVEs to create something representative of an organization. the naive way is to do a random sample (with fixed seed for reproducibility) and then review and hand tweak as needed e.g. by comparing to my orgs data this can be replaced by an organizations with their own CVEs and counts so they can run the notebooks on their data the notebook will enrich the list of CVEs with all the data sources we have (EPSS, CISA KEV, metasploit,.....) 3D interactive zoomable/rotatable scatter plot of EPSS vs CVSS score vs counts of CVEs the CVEs will be color-coded by data sources  e.g. red for CISA KEV, etc... it may have sliders on both EPSS and CVSS so users can see the effect of different thresholds calculate the EPSS percentiles for that set of CVEs a second notebook will run an EDA on the enriched set of CVEs this is primarily to educate users on the ease and power of EDA Let me know if there's anything else that we could do for orgs in terms of analyzing (their) CVEs (edited) </p> <p>...maybe I'll do a notebook on applying the decision tree code to their CVEs</p> <p>https://community.plotly.com/t/3d-interactive-graph-linked-with-three-sliders/72418</p> <p>import plotly.graph_objects as go import pandas as pd</p>"},{"location":"organizations/acme/Applied/#sample-dataframe-replace-this-with-your-actual-dataframe","title":"Sample DataFrame (Replace this with your actual DataFrame)","text":"<p>data = {     'CVE': ['CVE-2021-0001', 'CVE-2021-0002', 'CVE-2021-0003', 'CVE-2021-0004'],     'EPSS': [0.2, 0.3, 0.5, 0.7],     'Count': [10, 20, 30, 40],     'CVSScore': [2, 5, 8, 9] } df = pd.DataFrame(data)</p>"},{"location":"organizations/acme/Applied/#create-the-3d-scatter-plot","title":"Create the 3D Scatter plot","text":"<p>fig = go.Figure()</p>"},{"location":"organizations/acme/Applied/#initial-plot-with-all-data","title":"Initial plot with all data","text":"<p>fig.add_trace(go.Scatter3d(     x=df['EPSS'],     y=df['CVSScore'],     z=df['Count'],     mode='markers',     marker=dict(         size=8,         color=df['Count'],  # Color by Count         colorscale='Viridis',  # Choose a color scale         opacity=0.8     ) ))</p>"},{"location":"organizations/acme/Applied/#add-sliders","title":"Add sliders","text":"<p>sliders = [     dict(         steps=[dict(method='restyle',                     args=['visible', [False] * len(df)),                dict(label='All',                     method='restyle',                     args=['visible', [True] * len(df))])] ]</p>"},{"location":"organizations/acme/Applied/#slider-for-epss-score","title":"Slider for EPSS score","text":"<p>fig.update_layout(     sliders=[         dict(             active=0,             currentvalue={\"prefix\": \"EPSS Score Filter: \"},             pad={\"t\": 50},             steps=[dict(                 label=str(score),                 method=\"update\",                 args=[{\"visible\": df['EPSS'] &gt;= score},                       {\"title\": \"EPSS Score Filter: \" + str(score)}])                 for score in df['EPSS'].unique()]         )     ] )</p>"},{"location":"organizations/acme/Applied/#slider-for-cvss-score","title":"Slider for CVSS score","text":"<p>fig.update_layout(     sliders=[         dict(             active=0,             currentvalue={\"prefix\": \"CVSS Score Filter: \"},             pad={\"t\": 50},             steps=[dict(                 label=str(score),                 method=\"update\",                 args=[{\"visible\": df['CVSScore'] &gt;= score},                       {\"title\": \"CVSS Score Filter: \" + str(score)}])                 for score in df['CVSScore'].unique()]         )     ] )</p>"},{"location":"organizations/acme/Applied/#set-axes-labels","title":"Set axes labels","text":"<p>fig.update_layout(scene=dict(xaxis_title='EPSS Score',                               yaxis_title='CVSS Score',                               zaxis_title='Count'))</p>"},{"location":"organizations/acme/Applied/#set-layout-options-for-interactive-plot","title":"Set layout options for interactive plot","text":"<p>fig.update_layout(scene=dict(xaxis=dict(range=[0, 1]),                              yaxis=dict(range=[0, 10]),                              zaxis=dict(range=[0, df['Count'].max()])),                   width=800, height=600,                   title='3D Scatter Plot with EPSS and CVSS Scores')</p>"},{"location":"organizations/acme/Applied/#show-the-plot","title":"Show the plot","text":"<p>fig.show()</p>"},{"location":"organizations/acme/EDA/","title":"Putting it all Together","text":"<p>sample of CVEs and counts percentile score 3d plot of sources, counts cvss, epss (sliders)</p>"},{"location":"requirements/Requirements/","title":"Requirements","text":"<p>Different stakeholders have different needs. These are captured here and used to inform the solution.</p>"},{"location":"requirements/Requirements/#personas","title":"Personas","text":""},{"location":"requirements/Requirements/#product-engineer","title":"Product Engineer","text":"<p>Responsible for Finding and Fixing vulnerabilities in the software Products that they develop</p> <p>~80% of the software in these Products is Open Source Software -     and has associated CVEs and Zero Days.</p> <p>Represents: the technical roles: Developer, Product Security, DevSecOps</p>"},{"location":"requirements/Requirements/#security-manager","title":"Security Manager","text":"<p>Responsible for delivering value for the organization - and focused on Time-To-Value</p> <p>'Wants to optimize the flow of software/value versus security risk.</p> <p>Represents: the non-technical business roles: includes CISO</p>"},{"location":"requirements/Requirements/#cyber-defender","title":"Cyber Defender","text":"<p>Responsible for defending an organization from cyber security attacks.</p> <p>Represents: network defenders,\u00a0 IT/infosec</p>"},{"location":"requirements/Requirements/#tool-provider","title":"Tool Provider","text":"<p>Provide tools to help vulnerability risk management</p> <p>Represents: Tool providers: Tool Vendors, open source tools,...</p>"},{"location":"requirements/Requirements/#audit-and-compliance","title":"Audit and Compliance","text":"<p>Responsible for ensuring Products are compliant with regulation and security requirements for their organization</p> <p>Includes internal GRC and industry e.g. PCI.</p> <p>Represents: Audit, Compliance</p>"},{"location":"requirements/Requirements/#risk-management","title":"Risk Management","text":"<p>Responsible for ensuring the policies are defined and signed-off</p> <p>Policies signed-off by various teams (development, security, compliance) and works alongside the regulatory requirements.</p> <p>Represents: Risk</p>"},{"location":"requirements/Requirements/#cyber-insurance","title":"Cyber Insurance","text":"<p>Responsible for cybsersecurity insurance (the Risk Transfer part of risk)</p> <p>Represents: cybsersecurity insurance and underwriting process</p>"},{"location":"requirements/Requirements/#user-scenarios","title":"User Scenarios","text":"<p>User scenarios are representative of real problems for the majority of users i.e. the most common scenarios. They give a rich scenario-specific context and should be written by real users.</p> <p>It is useful to describe a scenario from 2 perspectives: how things look now, and how the user would like things to look in the future (aspirational).</p>"},{"location":"requirements/Requirements/#find-and-fix-vulnerabilities-by-risk","title":"Find and Fix Vulnerabilities By Risk","text":"<p>Product Engineer - DevOps:Find and Fix Vulnerabilities By Risk</p> <p>Background: There are several tools and services running in the DevOps pipeline that detect vulnerabilities in OSS (Open Source Software)</p> <ul> <li>Most, but not all, of these have CVEs</li> <li>The CVEs are in the application OSS code, and the underlying stack     (Container and Operating Systems OSS code)</li> <li>A relatively small number of vulnerabilities account for the     majority of the count of vulnerabilities e.g. there may be 1000's of     a few CVEs but 10 or less of most CVEs.</li> <li>All the tools support CVSS, some support EPSS more recently (though     the tool vendor did not provide guidance on how to use EPSS)</li> </ul> <p>Objective: Optimize the flow of software through the DevOps pipeline versus security risk.\u00a0</p> <p>\u2192\u00a0 Gather vulnerabilities reported by several tools across the DevOps pipeline</p> <p>\u2192\u00a0 Vulnerabilities are prioritized based on risk</p> <p>\u2192 Data sources for risk are defined</p> <p>Narrative:\u00a0</p> <p>Pre-Narrative <sub>(how things are now)</sub></p> <p>As a Product Engineer, I\u2019m drowning in a sea of CVEs! They just keep coming, more and more every year - it\u2019s relentless!</p> <p>We use CVSS because our:</p> <ul> <li>tools report CVSS scores.</li> </ul> <p>But most CVEs have a high CVSS score, so we have to fix most things. It\u2019s whack-a-mole!</p> <p>I don\u2019t have a good understanding of all the tools in our DevOps pipeline and the vulnerability data they produce. And I don\u2019t know how to get it. DevOps Tools don\u2019t help us here.</p> <p>Post-Narrative <sub>(how we want things to be in the future - aspirational)</sub></p> <p>As a Product Engineer, I care most about my effort vs risk i.e. the effort to fix the vulnerabilities in my environment.</p> <p>I use EPSS as a key part of my risk-based prioritization (along with Reachability analysis, and Exploratory Data Analysis to understand the root systemic causes for my CVEs).</p> <p>**Overall, applying these 3 independent measures, I get a 10x reduction in effort and CVEs to fix! Now we\u2019re sailing!\u00a0**</p>"},{"location":"requirements/Requirements/#get-teams-to-focus-on-the-real-issues-based-with-real-facts-and-trending-issues-and-bring-the-collective-risk-down-for-my-organization","title":"Get teams to focus on the real issues (based with real facts and trending) issues and bring the collective risk down for my\u00a0organization.","text":"<p>Security Manager - Get teams to focus on the real issues</p> <p>Background: CVEs provide a standardized way to identify and track security vulnerabilities across software, services, hardware, SaaS, APIs, etc. CISOs use CVEs to assess the level of risk associated with specific vulnerabilities. The number of CVEs typically indicate the overall security landscape and help prioritize which vulnerabilities should be addressed first.</p> <p>Pre-Narrative <sub>(how things are now)</sub></p> <p>CISOs are constantly subject to allocate their limited resources effectively. Knowing the number of CVEs on hand helps them determine where to focus their efforts. High-severity vulnerabilities with a large number of reported CVEs may take precedence over others, as they pose a greater risk.</p> <p>The greater the organization, the more complex the situation gets.</p> <p>If this is not enough, CISOs and directs constantly have a battle with Business, Engineering, Applications teams to provide evidence why a CVE needs to be fixed. Existing scoring like CVSS3 having limitations. Although bigger organizations have access to Threat Intel where CVSS can be married to the threat intel feeds, but this is usually a pipe dream for SMBs or organizations with reduced security budgets.</p> <p>Post-Narrative <sub>(how we want things to be in the future - aspirational)</sub></p> <p>Taking EPSS along with Business Context into account will really help organizations to sift through the CVEs. Focus from VM and Applications teams can be tailored towards fixing the most critical of issues. This will also help with the conversation with Business and App Teams, and reduce (if not eliminate) friction between Security and non-security Teams.</p>"},{"location":"requirements/Requirements/#fit-epss-scores-into-existing-cvss-focused-prioritization-policies","title":"Fit EPSS scores into existing CVSS-focused Prioritization Policies","text":"<p>Tool Provider - Fit EPSS scores into existing CVSS-focused Prioritization Policies</p> <p>Background: Our software provides many risk factors that combine via customizable policies to prioritize the risks that matter most. EPSS is a newer factor, and needs to both fit into our customer\u2019s existing processes and be easy to understand</p> <p>Objective: Fit EPSS scores into existing CVSS-focused prioritization policies without extensive explanation</p> <p>Pre-Narrative <sub>(how things are now)</sub> As a Tool Provider, our customers look to us to provide a prioritized perspective on the relative risk of the great many vulnerabilities detected in their applications. The current (admittedly immature) state of most customers is to prioritize solely on CVSS score or Category with policies such as \u201cRemediate all High and Critical Severity Vulnerabilities. More mature customers include other risk factors our tool provides, such as whether the vulnerable method is reachable in a stack trace (Reachability Analysis).</p> <p>Post-Narrative <sub>(how we want things to be in the future - aspirational)</sub></p> <p>As a Tool Provider, I can deliver to my customer the data necessary to utilize EPSS scores in their existing context without significant additional factors or extensive explanation. My customers are provided with whether a public exploit already exists, and if not, what the likelihood of a public exploit existing in the near future is. This is put into easy-to-understand severity levels that additionally factor in the confidence of the likelihood score and are aligned with the existing Critical, High, Medium, Low severities I am used to from CVSS.</p>"},{"location":"requirements/Requirements/#compliance-prioritized-by-risk","title":"Compliance Prioritized by Risk","text":"<p>Audit and Compliance - Compliance Prioritized by Risk</p> <p>Background: There are industry requirements to remediate CVEs above a certain CVSS score.</p> <ul> <li>e.g. PCI DSS 4.0 11.3.2.1 \u201cExternal vulnerability scans are     performed after any significant change as follows: Vulnerabilities     that are scored 4.0 or higher by the CVSS are resolved.\u201d</li> </ul> <p>Narrative: Compliance Requirement to Remediate CVEs above a certain CVSS score</p> <p>Pre-Narrative <sub>(how things are now)</sub></p> <p>As a Compliance Analyst, we are required to comply with certain regulations that prescribe remediation based on the CVSS score of a vulnerability when externally facing. ~~Is this feasible?~~ There is no allowance for asset or organizarion specific variation in patching threshold. This rigid vulnerability management practice places an unfair burden on cyber defenders constraining their ability to target their effort proportional to the threat against a specific asset. A PII database is likely to be subjected to more threat than the canteen menu.</p> <p>Post-Narrative <sub>(how we want things to be in the future - aspirational)</sub></p> <p>Even though we need to remediate all CVEs above a certain CVSS score, we prioritize CVEs by risk so we remediate the highest risk ones first. In other words, we focus on security and compliance. EPSS scores help in prioritization efforts.~~</p> <p>A guidance on calculating asset and organization specific patching threshold based on EPSS, informed by SSVC and Open FAIR<sup>TM</sup>.\u00a0 This approach can be adopted, for example, under PCI DSS V4 Customized Approach assessment method (https://blog.pcisecuritystandards.org/pci-dss-v4-0-is-the-customized-approach-right-for-your-organization)</p>"},{"location":"requirements/Requirements/#prioritized-by-epss-score-and-remediated-accordingly","title":"Prioritized by EPSS score and remediated accordingly","text":"<p>Risk Management - Prioritized by EPSS score and remediated accordingly</p> <p>Across the board, there is an expectation to remediate CVEs above a certain CVSS score. Usually, a CVSS score of 7 and over. With adopting EPSS scores in the risk program, the EPSS threshold needs to be defined in the organization policies.</p> <p>Narrative: Update the policy documentation to Remediate CVEs above a certain EPSS threshold</p> <p>Pre-Narrative <sub>(how things are now)</sub></p> <p>Right now, there is a handful of organizations really taking EPSS into consideration as a prioritization tool. EPSS threshold is a thought and there is no industry wide consensus of what an optimal EPSS threshold is. Additionally, such guidance is also included from the regulatory bodies as an acceptable metric.\u00a0</p> <p>Post-Narrative <sub>(how we want things to be in the future - aspirational)</sub></p> <p>Taking EPSS along with Business Context into account will really help organizations to sift through the CVEs. A clear policy not only needs to be defined and accepted by different functions in the organizations, the process of prioritization needs to be automated to consider business context, criticality of the application. Defining and making sure there is acceptance via the policies will reduce (if not eliminate) friction between Security and non-security Teams.</p>"},{"location":"requirements/Requirements/#provide-users-of-the-solution-a-roadmap-and-priority-list-of-vulnerabilities-to-address-as-the-landscape-evolves","title":"Provide users of the solution a roadmap and priority list of vulnerabilities to address as the landscape evolves","text":"<p>Risk Management - Provide users of the solution a roadmap and priority list of vulnerabilities to address as the landscape evolves</p> <p>How EPSS is deployed and can be used by a tool vendor to assist with vulnerability prioritization at scale. EPSS can provide additional embellishment/metadata of a discovered vulnerability and focus and organisation efforts on what to fix first.\u00a0</p> <p>Background</p> <p>Current state of play:\u00a0</p> <p>Most cyber security teams are drowning in CVE's and high scoring CVSS (Common Vulnerability Scoring System). This is the result of treating vulnerabilities with little or no context. The intelligent approach is to address vulnerabilitis based on risk of breach. Which vulnerabilities should I address to lower the probability of breach?\u00a0 \u00a0</p> <p>A vulnerability management programme should be designed in such a way that weaknesses and risks to an organisation are addressed first. The reality of vulnerability management and mitigation is that \"we can\u2019t fix all the vulnerabilities\". This is due to resource, cost and value considerations. It makes no financial sense focusing on fixing all vulnerabilities faced by an organisation, there are generally too many. When mitigating vulnerabilities and protecting an organisation attention needs to be paid to vulnerabilities which have a significant statistical chance of being exploited and damaging an enterprise. The return on investment of addressing vulnerabilities which have a low probability of being used in a breach attempt is extremely low and wasteful of limited resources. Unfortunately some compliance frameworks require vulnerabilities to be mitigated regardless of the probability of breach, EPSS does not solve this blunt approach to cyber resilience.\u00a0</p> <p>Objective</p> <p>Provide users of the solution a roadmap and priority list of vulnerabilities to address as the landscape evolves. The landscape is a twofold beast;</p> <ol> <li>Technology changes over time, change introduces risk which may     introduce weakness and vulnerability. Today\u2019s secure system may be     insecure tomorrow due to an unknown vulnerability being discovered.     This is not uncommon and a continuous challenge..</li> <li>The threat actor landscape can evolve, approach to breach &amp;     cybercriminality and tooling used by threat actors can change the     priority of a vulnerability. Today threat actors and industrialized     cybercrime are focusing and commonly using CVE-2023-XYZ, tomorrow     this may change and additional vulnerabilities may be used in     addition.\u00a0</li> </ol> <p>Most medium sized organizations and enterprises have tens, if not hundreds, of open vulnerabilities. Most organizations have a stretched cyber security team and product development teams should be focusing on new product not retrofitting. These challenges combined, result in not having the ability to fix all the vulnerabilities all the time. We must be able to prioritize based on real-world data. Vulnerability severity score alone does not necessarily mean such a vulnerability is commonly used to breach a system. \u00a0EPSS can be used to provide real-world breach prediction metadata per vulnerability in order to guide an organisation on which issues need to be addressed first relative to the long backlog of vulnerabilities most organisation are faced with. \u00a0\u00a0</p> <p>It's not uncommon to combine EPSS with other vulnerability severity rating metadata, In the case of Edgescan this is CISA KEV (CISA Known Exploitable Vulnerability Catalog), CVSS (Common Vulnerability Scoring System) and\u00a0 in the case of Edgescan, EVSS (Edgescan Validated Security Score). Combining such metadata can provide much higher fidelity in terms of priortization.\u00a0</p> <p>Narrative</p> <p>Vulnerability management programmes generally have a number of metrics to measure by. Most common are CVSS, A tool risk score (generally without context), Vulnerability age (date opened/date closed), to name a few....</p> <p>Context: Generally speaking using CVSS alone is a blunt instrument as it does not have any context in relation to the business value of the vulnerable asset, chance of breach is ignored etc. CVSS is still used for compliance (such as PCI DSS) and simple ordering of vulnerabilities relative to each other. EPSS does not have business context but has breach probability. When breach probability is combined with internal metadata such as asset importance this can hugely assist with prioritization.</p> <p>Independence: A value-add of EPSS is the fact that the data is derived by an independent third party with greater reach than most private or proprietary risk models. \u00a0It reflects the real world without any commercial bias; this is important.</p>"},{"location":"requirements/Requirements/#knowing-risk-for-a-vulnerability-before-or-without-a-cve","title":"Knowing Risk for a Vulnerability Before or Without a CVE","text":"<p>Any - Knowing Risk for a Vulnerability Before or Without a CVE</p> <p>Background:\u00a0</p> <p>Many vulnerabilities don't have CVEs but represent a real risk - these include, but are not limited to, zero-days.</p> <p>Per The State of Exploit Development: 80% of Exploits Publish Faster than CVEs</p> <ul> <li>Of the 45,450 public exploits in Exploit Database, there are 11,079     (~26%) exploits in Exploit Database that have mapped CVE numbers.</li> <li>Among those 11,079 exploits:<ul> <li>14% are zero-day (published before the vendors release the     patch), 23% are published within a week after the patch release     and 50% are published within a month after the patch release. On     average, an exploit is published 37 days after the patch is     released. Patch as soon as possible \u2013 the risk of a     vulnerability being exploited increases quickly after vendors     release the patches.</li> <li>80% of public exploits are published before the CVEs are     published. On average, an exploit is published 23 days before     the CVE is published. Software and hardware may also have     vulnerabilities with public exploits that don't have CVEs. Check     security updates from vendors frequently and apply updates as     soon as possible.</li> </ul> </li> </ul> <p>Per Focus on the Biggest Security Threats, Not the Most Publicized, Gartner, Nov 2017</p> <ul> <li>Zero day vulnerabilities made up only approximately 0.4% of     vulnerabilities during the past decade.</li> <li>The amount spent on trying to detect them is out of kilter with the     actual risks they pose. This is compared with the massive numbers of     breaches and infections that come from a small number of known     vulnerabilities that are being repeatedly exploited.</li> <li>As a top priority, focus your efforts on patching the     vulnerabilities that are being exploited in the wild or have     competent compensating control(s) that can. This is an effective     approach to risk mitigation and prevention, yet very few     organizations do this.</li> </ul> <p>Narrative:\u00a0</p> <p>Pre-Narrative <sub>(how things are now)</sub></p> <p>When a zero-day drops, it takes days before \"the dust settles and there is clarity\" on the risk associated with the vulnerability.</p> <p>It's typically a manual exercise repeated simultaneously by many individuals across organizations in the dark.</p> <p>I don't have a good overall risk rating or prioritization (including exploitation probability) for my vulnerabilities</p> <p>\u2192 For vulnerabilities without CVEs, I don't have a good \"risk rating\" (including exploitation probability).</p> <p>\u2192 If only ~26% of vulnerabilities have CVEs, I don't have a good \"risk rating\" (including exploitation probability) for the other ~74%!</p> <p>\u2192 Am I \"Rearranging deckchairs on the Titanic\" by only focusing on Risk-Based Prioritization of vulnerabilities with CVEs?</p> <p>Post-Narrative <sub>(how we want things to be in the future - aspirational)</sub></p> <p>As Any, I can assess the risk associated with any vulnerability based on the meta-data / parameters for that vulnerability.</p> <p>This \"risk rating\" (including exploitation probability) is available via a unique globally recognised identifier for that vulnerability e.g. OSVD, GHSA, CVE....</p> <p>I recognize that this \"risk rating\" is very volatile initially in the case of zero-days - but it is fresh (reflects current known information - which changes significantly in the first few days of a zero-day)</p> <p>I now have a holistic view of risk (including exploitation probability) for all known vulnerabilities!</p>"},{"location":"requirements/Requirements/#_1","title":"Requirements","text":"<p>Any - A Holistic Unified View of Risk</p> <p>Background:\u00a0</p> <p>\"Risk is per Asset and depends on Impact of a Vulnerability being exploited by a Threat\" per Elements of Risk. That asset can be tangible (e.g. a server, a facility, etc.) or intangible (e.g. an application, a virtual machine, a container, data, etc.). The level(s) that you track risk for tangible and intangible assets will depend on your goals and objectives. It probably does not make sense to track risk for assets that you don't intend to manage. For example, it is probably sufficient to track risk at the application level as compared to the component level, such as the web server, the app server, the database server, etc.) unless different people are responsible for managing each of these components. A key point in being able to track risk is to be able to measure by area of responsibility whether overall risk is getting better or worse and then to be able to drill down into the risk and ascertain where the increases and decreases are coming from.\u00a0</p> <p>Risk can be approached</p> <ol> <li>top down - Generally, top-down risk is based on forecasted data, as     opposed to actual data, although the forecasts may be based on     historical data.\u00a0  <ol> <li>From an organization perspective, the risk associated with the     assets in the organization<ol> <li>FAIR and\u00a0How to     Measure Anything in Cybersecurity Risk\u00a0(Bayesian)     are examples of this top-down risk approach</li> </ol> </li> </ol> </li> <li>bottom up - Generally, based on actual data, such as threats and     vulnerabilities.<ol> <li>For a given vulnerability, the\u00a0Impact of the Vulnerability being     exploited by a Threat for a given Asset.</li> </ol> </li> </ol> <p>Also, given EPSS is a probability, it is technically possible to combine probabilities of Exploitation into an overall probability of Exploitation. It doing likelihood calculations, it is important to keep in mind that EPSS considers the likelihood of attempted exploitation. Even if the exploitation is attempted, it may not actually be successful, such as due to reachability issues and compensating controls.</p> <ol> <li>e.g. see \"EPSS Can Scale, to Produce System, Network, and     Enterprise-level Exploit Predictions\".</li> </ol> <p>Objective: Have a holistic unified view of risk i.e. reconcile the Top-down and Bottom-Up view of Risk - and understand Risk in context.</p> <p>E.g. taking a recent Research Analysis \"Commonalities in Vehicle Vulnerabilities\" https://ioac.tv/3Pp13bE as an example:</p> <p>Automotive manufacturers and vendors should not hyper-focus on critical-risk and high-risk vulnerabilities, and thus overlook vulnerabilities categorized as medium-risk and below. Attackers are inherently languid, and most exploits discovered in the wild follow the path of least resistance.\u00a0Tolerating medium-risk vulnerabilities could lead to a rise in attack chains that achieve a critical compromise\u00a0of an automotive component.</p> <p>This paper collects the automotive-related data IOActive has discovered through thousands of testing hours and provides a wide-band analysis of the years 2012 to 2022 via data points such as the impact, likelihood, and overall risk of the vulnerabilities we discovered.</p> <p>Understand risk for a given vulnerability in aggregate for</p> <ol> <li>chained vulnerabilities</li> <li>an asset or organization</li> </ol> <p>Narrative:</p> <p>Pre-Narrative <sub>(how things are now)</sub></p> <p>As Any, I observe 2 irreconcilable views of Risk - top-down and bottom-up. And I don't know how to reconcile these views.</p> <p>Post-Narrative <sub>(how we want things to be in the future - aspirational)</sub></p> <p>As Any, I can see how to relate the bottom-up view of risk to the top-down view, so I have more context to inform my risk-based prioritization and remediation.</p> <p>Cyber Defender</p> <p>Cyber Defender (CSIRT or ISAC) - Communicate and amplify critical guidance about a vulnerability report to stakeholders for action</p> <p>Background: Vulnerability coordinators serve an amplifying role, especially for small or medium-sized stakeholders that have limited vulnerability report intake and triage capabilities. A CSIRT or ISAC should have a defined constituency of stakeholders to which it is providing value and services. A CSIRT should provide some (but need not be all) of the FIRST CSIRT services. CSIRT Services Framework Version 2.1 (first.org).</p> <p>Objective: Conduct vulnerability triage (services framework 7.3.1) in order to provide useful notifications to stakeholders (services framework 7.5.2). Goal is for the CSIRT to provide a limited and finite number of alerts to constituents to drive actions on critical vulnerabilities that mitigate the risk to the constituency.</p> <p>Narrative:</p> <p>Pre-Narrative <sub>(how things are now)</sub></p> <p>CSIRTs often obtain pre-release notification of vulnerabilities from vendors or other coordination partners. CSIRT staff need to triage vulnerability reports for further information gathering and action. State of exploitation of the vulnerability is one contributor to triage.</p> <p>Post-Narrative <sub>(how we want things to be in the future - aspirational)</sub></p> <p>EPSS can be appropriately integrated into pre-release triage evaluation of vulnerabilities.</p>"},{"location":"requirements/Requirements/#user-stories","title":"User Stories","text":"<p>Info</p> <p>A\u00a0User Story takes the form As a [type of user], I want [some goal] so that [some reason]</p> <p>They should be written by real users e.g. the real users representing the Personas (not by the people developing the solution)</p>"},{"location":"requirements/Requirements/#focused-vulnerability-fix","title":"Focused Vulnerability Fix","text":"<p>Focused Vulnerability Fix</p> <p>As a Product Engineer and user of any vulnerability detection or ranking tool, I want to minimize the False Negatives, and the False Positives, so I fix the vulnerabilities that should be fixed, and only the vulnerabilities that should be fixed.</p>"},{"location":"requirements/Requirements/#my-effort-in-my-environment","title":"My Effort in My Environment","text":"<p>My Effort in My Environment</p> <p>As a Product Engineer, I care most about my effort i.e. the effort to fix the vulnerabilities in my environment. My effort is affected by counts of instances for a given CVE ID.</p>"},{"location":"requirements/Requirements/#unified-prioritized-personalized-achievable-view","title":"Unified Prioritized Personalized Achievable view","text":"<p>Unified Prioritized Personalized Achievable view\u00a0</p> <p>As a Product Engineer / Security Manager, I want a unified prioritized personalized achievable view (across tools and teams) of what to fix first</p>"},{"location":"requirements/Requirements/#know-risk-and-remediation","title":"Know Risk and Remediation","text":"<p>Know Risk and Remediation</p> <p>As a Security Manager, I want to know risk and remediation per Asset and for the organization</p>"},{"location":"requirements/Requirements/#confidence-level-of-epss-scores","title":"Confidence Level of EPSS Scores","text":"<p>Confidence Level of EPSS Scores</p> <p>As a Tool Provider I want to provide my customers with not just an EPSS Score, but the Confidence level of that assessment. The estimation of score accuracy has a direct impact on my ability to de-prioritize lower EPSS scores. Low Confidence should ideally be communicated, and ideally influence Severity levels.</p>"},{"location":"requirements/Requirements/#severity-categories","title":"Severity Categories","text":"<p>Severity Categories</p> <p>As a Tool Provider I want to provide my customers with not just an EPSS Score, but a standard Severity level that is familiar to me and officially provided by the same organization that provides the scores. Critical, High, Medium, Low are values I understand and can be mapped to existing policies and processes easily - especially for communication to less security-fluent stakeholders.</p>"},{"location":"requirements/Requirements/#existing-public-exploits","title":"Existing Public Exploits","text":"<p>Existing Public Exploits</p> <p>As a Tool Provider I want to provide my customers with a complete Public Exploit workflow and decision tree without having to add additional data feeds beyond EPSS into my application data. For my customers to prioritize a given vulnerability based on EPSS, I first have to add a separate data feed of known public exploits and the logic chain of \u201cIf no public exploits, than use EPSS for likelihood to determine priority\u201d This requires additional data presented separately in my Tool and can lead to customer misunderstandings such as \u201cWhy is the EPSS low but you are telling me it already has a public exploit?\u201d Ideally, EPSS scores would factor in already published exploits and skip this step.</p>"},{"location":"requirements/Requirements/#remediation-sla","title":"Remediation SLA","text":"<p>Remediation SLA</p> <p>As Any, I want to have a Service Level Agreement (SLA) based on risk, so there is a clear definition of when a vulnerability should be fixed.</p> <p>In govt space they still rely on remediation SLAs based on CVSS severity. As do many commercial orgs not yet educated to the nuances of determining a vuln severity.\u00a0I think using fairly common terms/bins/labels would help folks grasp an understanding of EPSS more quickly.\u00a0Labels/bins are already arbitrary in CVSS but\u00a0it\u2019s\u00a0still heavily relied upon.</p>"},{"location":"requirements/Requirements/#people-behind-the-personas","title":"People Behind the Personas","text":"Persona Who leads that Persona Product Engineer Chris Madden,  Stephen Shaffer Security Manager Aruneesh Salhotra Cyber Defender Patrick Dunstan, Jonathan Spring Tool Provider Eoin Keary  https://www.edgescan.com/  Edgescan is the first fully-integrated cybersecurity platform that unifies five robust solutions into a single combative platform. These solutions include: external attack surface management, risk-based vulnerability management, application security testing, API security testing, and pentesting as a service. Edgescan was listed as one of the \u201cnotable vendors\u201d for EASM in the Q1 2023 Forrester Landscape for External Attack Surface Management Steve Finegan AppSOC  Jeffrey Martin Mend.io  SCA/SAST/Image+cloud scanning. The first SCA vendor to support Reachability analysis Mend.io has been recognized as a Visionary in the 2023 Gartner\u00ae Magic Quadrant\u2122 for Application Security Testing. Audit and Compliance Denny Wan Cyber Insurance Derrick Lewis Risk Management (Risk Manager) Aruneesh Salhotra"},{"location":"risk/Back_of_napkin/","title":"Applied Back of the napkin Likelihood of Exploitation Model","text":"<p>Overview</p> <p>As users, we want to know which CVEs we need to fix first based on our available resources/capacity to fix them.</p> <p>To develop an understanding of EPSS, we'll build a\u00a0back of the napkin Risk Based Prioritization model that focuses on Likelihood of Exploitation.</p> <p>We'll look at the tradeoff between Likelihood of Exploit vs how many CVEs we need to fix.</p> <p>When we look at Risk Based Prioritization models in products and  production later in this guide; you'll be able to recognize many of the elements in our back of the napkin model.</p>"},{"location":"risk/Back_of_napkin/#back-of-the-napkin-model","title":"Back of the napkin Model","text":"<p>For this back of the napkin model:</p> <ol> <li>We use Threat Likelihood of Exploit per our Risk Taxonomy</li> <li> <p>For this back of the napkin model, let's assume that</p> <ol> <li> <p>The odds of a vulnerability being exploited are in the order in     the diagram (highest risk on top):</p> <ol> <li></li> </ol> </li> <li> <p>The probabilities quoted in section \"Threat Likelihood of     Exploit\" are correct (though exact figures don't matter on this     back of the napkin - the point is there's a significant difference)</p> <ol> <li>37.1% it the vulnerability is weaponized</li> <li>3.7% if a Proof Of Concept exists</li> </ol> </li> <li>For counts of CVEs<ol> <li>the counts of CVEs are per \"Likelihood of Exploit Populations\" diagram</li> <li>there's a relatively small number of vulnerabilities that     have been Known Exploited in our organization i.e. 10 or     less</li> <li>We're looking at all published CVEs.<ol> <li>You could apply this back of the napkin model to the subset     of CVEs in your environment.</li> </ol> </li> <li>We'll use a very exaggerated\u00a0figure of ~~20K for CVEs that     have weaponized exploits or evidence of exploitation in the     wild (as it's a back of the napkin exercise and we want to     understand if our model is still useful in a well beyond     worst case scenario):<ol> <li>So that gives ~~10% of CVEs that have weaponized     exploits or evidence of exploitation in the wild</li> <li>In contrast, Qualys give a much smaller figure,     \u201cLess than 3% of vulnerabilities have weaponized     exploits or evidence of exploitation in the wild, two     attributes posing the highest risk\u201d</li> </ol> </li> </ol> </li> </ol> </li> </ol> <p>A rough drawing on the back of our napkin of Probability of Exploitation vs the Count of CVEs:</p> <p></p> <p>Observations</p> <p>For this back of the napkin model:</p> <ol> <li>Using the Weaponized Exploit Probability of Exploitation (37%) as a     threshold gives two \"10x's\"\u00a0 i.e. at this threshold there's<ol> <li>10x higher probability of exploitation or greater</li> <li>there's 10% of CVEs (or &gt;10x more CVEs are below this     threshold)</li> </ol> </li> <li>we can see that as we raise the threshold for Probability of     Exploit, we have less CVEs to fix, (but we may miss some CVEs that     we should have fixed).</li> </ol> <p>For our organization risk posture, maybe we want to use the lower Probability of Exploitation Threshold associated with a Proof Of Concept exploit being available (3.7%).</p> <ul> <li>In this case, there's ~~100K CVEs below this threshold in the back     of napkin model, and ~~120K above it (to fix based on our     threshold). So we fix a lot more CVEs (and a lot more than the     ~~5% that are exploited), but we miss a lot less of the ones we     should have fixed).</li> </ul> <p>Tip</p> <p>Having these Probability of Exploitation values vs associated count of CVEs allows us make an informed decision based on our</p> <ul> <li>risk posture - using Likelihood of Exploitation</li> <li>resources/capacity available to fix CVEs</li> </ul>"},{"location":"risk/Back_of_napkin/#back-of-the-napkin-model-remediation-policy","title":"Back of the napkin Model Remediation Policy","text":"<p>Per our Risk Remediation Taxonomy, Likelihood of Exploitation informs one part of Risk per Vulnerability.</p> <p>To complete our back of the napkin Model for Prioritization we can use e.g. CVSS also.</p> <p>So our Remediation Policy (for our first pass triage) could be:</p> <ul> <li>for all CVEs that are at Weaponized Exploitation and above in our     Likelihood of Exploitation diagram (~~10% using our beyond worst     case figure)  <ul> <li>fix all CVEs that have a High or Critical CVSS score (~~65%)</li> </ul> </li> </ul> <p>This would require fixing 6.5% of CVEs (10% x 65%).</p> <p>Takeaways</p> <p>With this very simple back of the napkin model, and very exaggerated counts of weaponized exploitation, we see that by using Likelihood of Exploitation, we need to fix 1/10 of CVEs versus using CVSS alone!!!</p>"},{"location":"risk/Data_Sources/","title":"Likelihood of Exploit Populations","text":"<p>Overview</p> <p>Our ability to remediate depends on </p> <ol> <li>the priority (risk) of CVEs - the ones we want to fix based on our security posture<ol> <li>In the \"Understanding Risk\" chapter, we saw the ordered Likelihood of Exploit for different populations of CVEs in the Risk Remediation Taxonomy.</li> </ol> </li> <li>the number of CVEs for that priority (risk) - that we have the capacity/resources to fix</li> </ol> <p>This section gives a</p> <ol> <li>view of the sizes of those populations</li> <li>the data sources for those populations</li> </ol>"},{"location":"risk/Data_Sources/#population-sizes","title":"Population Sizes","text":"Population Sizes associated with the Risk Remediation Taxonomy - Likelihood of Exploit branch <p>TODO update venn with latest data - and add weaponized exploits</p> <ol> <li>~~50% (~~100K) of all CVEs (~200K) have known exploits available (based on a commercial CTI product used by the author)</li> <li>~~5% (~10K) of all CVEs are actively exploited <ol> <li>There isn't a single complete authoritative source for these CVEs</li> </ol> </li> <li>~~10% of CVEs with Known Exploits Available (KEA) are known exploited</li> <li>~~0.5% (~1K) of all CVEs (~200K) are in CISA Known Exploited Vulnerability </li> <li>~~5% (50) of all CISA KEV CVEs (~1K) are not listed in Vendor DBs</li> </ol> <p>Note</p> <ol> <li>Not all exploits are public/known.</li> <li>Not all public exploits have CVEs.</li> <li>A typical enterprise will have a subset of exploits/CVEs: ~~10K order of magnitude unique CVE IDs.<ol> <li>The counts of these unique CVE IDs may follow a Pareto type distribution i.e. there will be many instances of a small number of CVE IDs.</li> </ol> </li> </ol>"},{"location":"risk/Data_Sources/#likelihood-of-exploit-data-sources","title":"Likelihood of Exploit Data Sources","text":"Data Source Detail ~~ CVE count K CISA KEV Active Exploitation 1 Metasploit modules Weaponized Exploit 3 Nuclei templates Weaponized Exploit 2 ExploitDB Published Exploit Code 25 EPSS Predictor of Exploitation 220 <p>Tip</p> <p>The population sizes for higher Likelihood of Exploit (Active ~~5%, Weaponized ~~3%) are relatively small compared to Proof Of Concept (~~50%), and All CVEs (100%).</p> <p>This table lists the main public data sources.</p>"},{"location":"risk/Data_Sources/#other-vulnerability-data-sources","title":"Other Vulnerability Data Sources","text":"<p>In addition, there are many more Vulnerability Data Sources: </p> <ol> <li>Open Source vulnerability database<ol> <li>\"This infrastructure serves as an aggregator of vulnerability databases that have adopted the OSV schema, including GitHub Security Advisories, PyPA, RustSec, and Global Security Database, and more.\"<ol> <li>GitHub Advisory Database</li> <li>Global Security Database </li> <li>PyPA/PYSEC</li> <li>RUSTSEC</li> </ol> </li> </ol> </li> <li>Red Hat Security Advisories/RHSB</li> <li>Go Vulnerability Database</li> <li>Dell Security Advisory</li> <li>Qualys Vulnerability database</li> <li>Tenable Vulnerability database</li> <li>BID TODO</li> </ol> <p>Cyber Threat Intelligence vendors may provide an aggregation of this data.</p> <p>Takeaways</p> <ol> <li>There isn't a single complete authoritative source for all CVEs that are actively exploited - so we need to use multiple incomplete imperfect sources.</li> <li>The population sizes for higher Likelihood of Exploit (Active ~~5%, Weaponized ~~3%) are relatively small compared to Proof Of Concept (~~50%), and All CVEs (100%).</li> <li>Not all vulnerabilities are public/known, and for those that are known, not all of them have CVEs assigned.</li> <li>A typical enterprise will have a subset of exploits/CVEs: ~~10K order of magnitude unique CVE IDs.<ol> <li>The counts of these unique CVE IDs may follow a Pareto type distribution i.e. for your environment, there will likely be many instances of a small number of CVE IDs.</li> </ol> </li> </ol>"},{"location":"risk/Log4Shell/","title":"Applied: Log4Shell Example","text":"<p>Overview</p> <p>In previous sections, we covered the standards and key risk factors and how they fit together.</p> <p>In this section, we walk through these using Log4Shell as the example.</p>"},{"location":"risk/Log4Shell/#cve-record","title":"CVE Record","text":"<p>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228</p> <p> </p> The CVE record links to NVD for more information <p>Quote</p> <p>View additional information about CVE-2021-44228 on NVD. (Note: The NVD is not operated by the CVE Program)</p>"},{"location":"risk/Log4Shell/#national-vulnerability-database","title":"National Vulnerability Database","text":"<p>https://nvd.nist.gov/vuln/detail/CVE-2021-44228 </p>"},{"location":"risk/Log4Shell/#cvss-base-score","title":"CVSS Base Score","text":"The CVSS Base score is 10 and the rating is Critical. The parameters and values that make up the score are shown"},{"location":"risk/Log4Shell/#cisa-kev-link","title":"CISA KEV Link","text":"CVE-2021-44228 contains a link to the CISA KEV catalog entry"},{"location":"risk/Log4Shell/#cwes","title":"CWEs","text":"There are 4 CWEs associated with CVE-2021-44228"},{"location":"risk/Log4Shell/#cisa-kev","title":"CISA KEV","text":"<p>https://www.cisa.gov/known-exploited-vulnerabilities-catalog?search_api_fulltext=cve-2021-44228&amp;field_date_added_wrapper=all&amp;sort_by=field_date_added&amp;items_per_page=20</p> <p> </p> CVE-2021-44228 shows up twice in a search: the initial vulnerability, and the vulnerability associated with the incomplete fix"},{"location":"risk/Log4Shell/#mitre-cwe-917","title":"MITRE CWE-917","text":"<p>https://cwe.mitre.org/data/definitions/917.html</p> <p> </p> CWE-917 is the first CWE listed in the NVD entry https://nvd.nist.gov/vuln/detail/CVE-2021-44228 <p>See Neutralizing Your Inputs: A Log4Shell Weakness Story for an informative article by the CWE Program on assigning CWEs for this CVE.</p>"},{"location":"risk/Log4Shell/#epss","title":"EPSS","text":"<p>https://www.first.org/epss/api details the EPSS API. Some examples are given here.</p>"},{"location":"risk/Log4Shell/#score","title":"Score","text":"<p>https://api.first.org/data/v1/epss?cve=CVE-2021-44228</p> <p><pre><code>{\"cve\":\"CVE-2021-44228\",\"epss\":\"0.975620000\",\"percentile\":\"0.999980000\",\"date\":\"2024-02-11\"\n</code></pre> The EPSS score on 2024-02-11 is 0.975620000, which is in the 0.999980000 percentile i.e. 99.998% of the EPSS scores for all published CVEs are less than this score.</p>"},{"location":"risk/Log4Shell/#time-series","title":"Time Series","text":"<p>The EPSS score has varied slightly over recent days. <pre><code>curl https://api.first.org/data/v1/epss\\?cve\\=CVE-2021-44228\\&amp;scope\\=time-series | jq\n\n\n{\n  \"status\": \"OK\",\n  \"status-code\": 200,\n  \"version\": \"1.0\",\n  \"access\": \"public\",\n  \"total\": 1,\n  \"offset\": 0,\n  \"limit\": 100,\n  \"data\": [\n    {\n      \"cve\": \"CVE-2021-44228\",\n      \"epss\": \"0.975620000\",\n      \"percentile\": \"0.999980000\",\n      \"date\": \"2024-02-11\",\n      \"time-series\": [\n        {\n          \"epss\": \"0.975620000\",\n          \"percentile\": \"0.999980000\",\n          \"date\": \"2024-02-10\"\n        },\n        {\n          \"epss\": \"0.975620000\",\n          \"percentile\": \"0.999980000\",\n          \"date\": \"2024-02-09\"\n        },\n        {\n          \"epss\": \"0.975620000\",\n          \"percentile\": \"0.999980000\",\n          \"date\": \"2024-02-08\"\n        },\n        {\n          \"epss\": \"0.975620000\",\n          \"percentile\": \"0.999980000\",\n          \"date\": \"2024-02-07\"\n        },\n        {\n          \"epss\": \"0.974660000\",\n          \"percentile\": \"0.999570000\",\n          \"date\": \"2024-02-06\"\n        },\n        {\n          \"epss\": \"0.974660000\",\n          \"percentile\": \"0.999580000\",\n          \"date\": \"2024-02-05\"\n        },\n</code></pre></p>"},{"location":"risk/Log4Shell/#higher-scores-cve","title":"Higher Scores CVE","text":"<p>There are 5 CVEs with a higher EPSS score</p> <pre><code>curl https://api.first.org/data/v1/epss\\?epss-gt\\=0.97562 | jq\n\n{\n  \"status\": \"OK\",\n  \"status-code\": 200,\n  \"version\": \"1.0\",\n  \"access\": \"public\",\n  \"total\": 6,\n  \"offset\": 0,\n  \"limit\": 100,\n  \"data\": [\n    {\n      \"cve\": \"CVE-2021-44228\",\n      \"epss\": \"0.975620000\",\n      \"percentile\": \"0.999980000\",\n      \"date\": \"2024-02-11\"\n    },\n    {\n      \"cve\": \"CVE-2020-5902\",\n      \"epss\": \"0.975630000\",\n      \"percentile\": \"0.999980000\",\n      \"date\": \"2024-02-11\"\n    },\n    {\n      \"cve\": \"CVE-2019-2725\",\n      \"epss\": \"0.975790000\",\n      \"percentile\": \"1.000000000\",\n      \"date\": \"2024-02-11\"\n    },\n    {\n      \"cve\": \"CVE-2019-1653\",\n      \"epss\": \"0.975650000\",\n      \"percentile\": \"0.999990000\",\n      \"date\": \"2024-02-11\"\n    },\n    {\n      \"cve\": \"CVE-2018-7600\",\n      \"epss\": \"0.975750000\",\n      \"percentile\": \"1.000000000\",\n      \"date\": \"2024-02-11\"\n    },\n    {\n      \"cve\": \"CVE-2015-7297\",\n      \"epss\": \"0.975640000\",\n      \"percentile\": \"0.999990000\",\n      \"date\": \"2024-02-11\"\n    }\n  ]\n}\n</code></pre>"},{"location":"risk/Log4Shell/#weaponized-exploit","title":"Weaponized Exploit","text":"<p>Log4Shell CVE-2021-44228 is weaponized. Templates exist in MetaSploit and Nuclei:</p> <ul> <li>MetaSploit: https://www.rapid7.com/db/modules/auxiliary/scanner/http/log4shell_scanner/ </li> <li>Nuclei: https://github.com/projectdiscovery/nuclei-templates/blob/master/cves/2021/CVE-2021-44228.yaml</li> </ul> <p>Takeaways</p> <ol> <li>The NVD record https://nvd.nist.gov/vuln/detail/CVE-2021-44228 <ol> <li>adds enhanced information to the CVE record https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228.</li> <li>uses CVSS standard to assign scores to the CVE.</li> <li>does not list the Exploit Maturity because it is up to the user/consumer to provide that.</li> </ol> </li> <li>CVE-2021-45046 (the vulnerability associated with the incomplete fix of CVE-2021-44228) was added to CISA KEV 16 months after CVE-2021-44228.</li> <li>The CWE associated with Log4Shell has more detailed Technical Impact than the CVE<ol> <li>CVE-2021-44228: Impact<ol> <li>Confidentiality: High</li> <li>Integrity: High</li> <li>Availability: High</li> </ol> </li> <li>CWE-917: Common Consequences<ol> <li>Confidentiality:  Technical Impact: Read Application Data</li> <li>Integrity: Technical Impact: Execute Unauthorized Code or Commands</li> <li>Note that the \"Likelihood\" field is blank (as it is for most CWEs)</li> </ol> </li> </ol> </li> <li>The CISA KEV gives additional context for Action/mitigation, and states that this CVE is used in Ransomware campaigns.</li> </ol>"},{"location":"risk/Understanding_Risk/","title":"Understanding Risk","text":"<p>Overview</p> <p>To understand how to Prioritize CVEs by Risk, we need to understand Risk, and how we can use the building blocks (standards, key risk factors) to inform risk.</p> <p>This section gives a</p> <ol> <li>Definition of Risk and the key risk factors</li> <li>Risk Taxonomy or orientation map, showing where CVSS, CISA KEV, EPSS fit</li> <li>The different data sources that can be used to inform the key risk factors</li> </ol> <p> Source Code </p>"},{"location":"risk/Understanding_Risk/#risk-definition","title":"Risk Definition","text":"<p>Risk Definition from NIST Special Publication 800-30 r1 Guide for Conducting Risk Assessments</p> <p>Risk is per Asset and depends on Impact of a Vulnerability being exploited by a Threat</p> <ul> <li>RISK\u00a0 A measure of the extent to which an     entity is threatened by a potential circumstance or event, and     typically is a function of:\u00a0<ul> <li>the adverse impact, or magnitude of harm, that would arise     if the circumstance or event occurs; and\u00a0</li> <li>the likelihood of occurrence.</li> </ul> </li> <li>Threat the potential for a threat-source to     successfully exploit a particular information system vulnerability.</li> <li>Vulnerability\u00a0 Weakness in an information     system, system security procedures, internal controls, or     implementation that could be exploited by a threat source</li> <li>Impact The magnitude of harm that can be     expected to result from the consequences of unauthorized disclosure     of information, unauthorized modification of information,     unauthorized destruction of information, or loss of information or     information system availability.</li> <li>Asset The data, personnel, devices, systems,     and facilities that enable the organization to achieve business     purposes.</li> </ul> <p> NIST Generic Risk Model with Key Risk Factors </p>"},{"location":"risk/Understanding_Risk/#risk-remediation-taxonomy","title":"Risk Remediation Taxonomy","text":"<p> <sub>\"Risk Remediation Taxonomy based on a BSides Conference presentation\"</sub></p> <p>Risk is per Asset and depends on the Impact of a Vulnerability being exploited by a Threat</p> <ol> <li>The Vulnerability branch indicates there can be multiple     vulnerabilities for a given Asset<ol> <li>Each vulnerability can be considered separately with its     associated Threat and Impact<ol> <li>The Threat (\"the potential for a     threat-source to successfully exploit a particular     information system vulnerability\") depends on<ol> <li>Evidence of Exploit activity, or Probability of Exploit     activity<ol> <li>e.g. a vulnerability is known actively exploited in     the wild</li> <li>e.g. a vulnerability has no known exploitation or     known proof of concept or any known implementation</li> </ol> </li> <li>The Exploitability of the Vulnerability<ol> <li>e.g. a vulnerability that can be exploited remotely     automatically via a generic tool/script with no     permissions or user interaction required has high     Exploitability.</li> <li>e.g. a vulnerability that requires local access,     special permissions, bypass of a security feature,     and user interaction, has low Exploitability.</li> </ol> </li> </ol> </li> </ol> </li> </ol> </li> <li>The Asset branch is for one Asset<ol> <li>An Asset can be impacted by multiple Vulnerabilities and Threats     (the Vulnerability and Threat red boxes include multiple     sections to convey there are multiple)</li> <li>Likelihood of Exploit can also be viewed from an Asset point of     view also (i.e. for all Threats and Vulnerabilities that affect     that asset)</li> </ol> </li> <li>Remediation<ol> <li>Remediation is part of the overall Risk Remediation picture -     but will not be covered here.</li> </ol> </li> </ol>"},{"location":"risk/Understanding_Risk/#where-cvss-epss-cisa-kev-fit","title":"Where CVSS, EPSS, CISA KEV Fit","text":"<p>Adding more detail to the Vulnerability branch, to show where CVSS, EPSS, CISA KEV fit...</p> <p></p>  Where CVSS, EPSS, CISA KEV Fit with Risk"},{"location":"risk/Understanding_Risk/#threat-likelihood-of-exploit-data-sources","title":"Threat Likelihood of Exploit Data Sources","text":"<p>The Threat \"Likelihood of Exploit\" branch items are arranged by most likely on top\u00a0\u00a0</p> <ol> <li>Known Actively Exploited in your organization<ol> <li>If a Vulnerability was previously exploited in your     organization, then it's reasonable to think that Vulnerability     is most likely to be exploited again in your organization in the     future.</li> </ol> </li> <li>Known Actively Exploited in the wild<ol> <li>CISA KEV lists a subset (~~10%) of known actively     exploited Vulnerabilities in the wild.</li> <li>There isn't an authoritative common public list of ALL Vulnerabilities that are Known Actively Exploited in the wild.</li> </ol> </li> <li>Weaponized Exploit<ol> <li>A Vulnerability with a \"Weaponized Exploit\" (but not yet Known     Exploited) is more likely to be exploited than a Vulnerability     with \"Proof Of Concept Exploit\" available<ol> <li>\"vulnerabilities with published exploit code are as much as     7 times as likely to be exploited in the wild\"</li> <li>\"If it\u2019s \u2018weaponized\u2019 (think metasploit), the odds of a     vulnerability being exploited in the wild really balloon     from about 3.7% to 37.1%.\" Per\u00a0Jay Jacobs, Cyentia\u00a0</li> </ol> </li> </ol> </li> <li>Proof Of Concept Exploit<ol> <li>ExploitDB is an example of where Vulnerability Proof Of Concept     Exploits are available.</li> </ol> </li> <li>EPSS Probability of Exploitation<ol> <li>The EPSS score covers the range of Likelihood of Exploit from 0 to 100%.</li> </ol> </li> </ol>"},{"location":"risk/Understanding_Risk/#why-should-i-care","title":"Why Should I Care?","text":"<p>Tip</p> <p>Prioritizing vulnerabilities that are being exploited in the wild, or are more likely to be exploited, reduces the</p> <ol> <li>cost of vulnerability management</li> <li>risk by focusing on the vulnerabilities that need to be fixed first</li> </ol> <p>Quote</p> <ul> <li> <p>\"many vulnerabilities classified as     \u201ccritical\u201d are highly complex and have never been seen exploited in     the wild - in fact, less than 4% of the total number of CVEs have     been publicly exploited\" (see BOD 22-01: Reducing the Significant Risk of Known Exploited Vulnerabilities).</p> <p>Cybersecurity and Infrastructure Security Agency emphasizes prioritizing remediation of\u00a0vulnerabilities that are known exploited in the wild.</p> </li> <li> <p>\"As a     top priority, focus your efforts on patching the vulnerabilities     that are being exploited in the wild or have competent compensating     control(s) that can. This is an effective approach to risk     mitigation and prevention, yet very few organizations do this. This     prioritization reduces the number of vulnerabilities to deal with.     This means you can put more effort into dealing with a smaller     number of vulnerabilities for the greater benefit of your     organization's security posture.\"\u00a0</p> <p>Gartner </p> </li> </ul>"},{"location":"risk/Understanding_Risk/#how-many-vulnerabilities-are-being-exploited","title":"How Many Vulnerabilities are Being Exploited?","text":"<p>Only about 5% or fewer of all CVEs have been exploited</p> <ul> <li>\u201cLess than 3% of vulnerabilities have weaponized exploits or     evidence of exploitation in the wild, two attributes posing the     highest risk,\u201d Qualys</li> <li>\u201cOnly 3 percent of critical vulnerabilities are worth prioritizing,\u201d     https://www.datadoghq.com/state-of-application-security/</li> <li>\u201cLess than 4% of the total number of CVEs have been publicly     exploited\u201d, CISA KEV</li> <li>\u201cWe observe exploits in the wild for 5.5% of vulnerabilities in our     dataset,\u201d FIRST</li> </ul> <p>In contrast, for CVSS:</p> <ul> <li>~15% of CVEs are ranked Critical (9+)</li> <li>~65% of CVEs are ranked Critical or High (7+)</li> <li>~96% of CVEs are ranked Critical or High or Medium (4+)</li> </ul>"},{"location":"risk/Understanding_Risk/#what-vulnerabilities-are-being-exploited","title":"What Vulnerabilities are Being Exploited?","text":"<p>There isn't an authoritative common public list of ALL CVEs that are Known Actively Exploited in the wild</p> <ol> <li>CISA Known Exploited Vulnerabilities Catalog (CISA KEV) is a source of vulnerabilities that have been exploited in the wild<ol> <li>CISA KEV contains ~~10% of known exploited CVEs currently but is growing</li> <li>There's ~~1K CVEs in CISA KEV, while there are ~~220K published CVEs, and ~~5% of CVEs are known exploited</li> </ol> </li> <li>There are numerous Cyber Threat Intelligence sources e.g. vendors, publicly available data </li> <li>EPSS provides a probability of exploitation for all CVEs (in the next 30 days)</li> </ol>"},{"location":"risk/Understanding_Risk/#cvss","title":"CVSS","text":"<p>CVSS Base Score should not be used alone to assess risk!</p> <p>The CVSS Threat Metric Group contains an Exploit Maturity but it is the responsibility of the CVSS Consumer/user to populate the values</p> <p>If there is an absence of exploitation evidence, then EPSS can be used to estimate the probability it will be exploited</p>"},{"location":"risk/Understanding_Risk/#cvss-base-score","title":"CVSS Base Score","text":"<p>Quote</p> <p>CVSS Base (CVSS-B) scores are designed to measure the severity of a vulnerability and should not be used alone to assess risk. https://www.first.org/cvss/v4.0/user-guide#CVSS-Base-Score-CVSS-B-Measures-Severity-not-Risk</p> <p>The CVSS Base score is not a good indicator of likelihood of exploit\u00a0(it is not designed or intended to be)</p> <ul> <li>\"There\u2019s no inherent correlation between the vulnerability and if     threat actors are exploiting them in terms of those severity     ratings\" Gartner, Nov 2021</li> <li>\"CVSS score performs no better than randomly picking     vulnerabilities to fix and may lead to negligible risk reductions\"     Comparing Vulnerability Severity and Exploits Using     Case-Control Studies, 2014</li> </ul> <p>Quote</p> <p>The Base metric group represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. It is composed of two sets of metrics: the Exploitability metrics and the Impact metrics.</p> <ul> <li>The Exploitability metrics reflect the ease and technical means by which the vulnerability can be exploited. That is, they represent characteristics of the \u201cthing that is vulnerable\u201d, which we refer to formally as the \u201cvulnerable system\u201d. </li> <li>The Impact metrics reflect the direct consequence of a successful exploit, and represent the consequence to the \u201cthings that suffer the impact\u201d, which may include impact on the vulnerable system and/or the downstream impact on what is formally called the \u201csubsequent system(s)\u201d.</li> </ul>"},{"location":"risk/Understanding_Risk/#cvss-exploit-maturity","title":"CVSS Exploit Maturity","text":"<p>Quote</p> <p>This metric measures the likelihood of the vulnerability being attacked, and is based on the current state of exploit techniques, exploit code availability, or active, \u201cin-the-wild\u201d exploitation. Public availability of easy-to-use exploit code or exploitation instructions increases the number of potential attackers by including those who are unskilled. Initially, real-world exploitation may only be theoretical. Publication of proof-of-concept exploit code, functional exploit code, or sufficient technical details necessary to exploit the vulnerability may follow. Furthermore, the available exploit code or instructions may progress from a proof-of-concept demonstration to exploit code that is successful in exploiting the vulnerability consistently. In severe cases, it may be delivered as the payload of a network-based worm or virus or other automated attack tools.</p> <p>The Threat Likelihood of Exploit Data Sources can be used here.</p> <p>Tip</p> <p>\"Enriching the NVD CVSS scores to include Temporal &amp; Threat Metrics\" is an example project where the CVSS Exploit Code Maturity/Exploitability (E) Temporal Metric is continuously updated.</p> <ul> <li>Fetches EPSS scores every morning</li> <li>Fetches CVSS scores from NVD if there are new EPSS scores.</li> <li>Calculates the Exploit Code Maturity/Exploitability (E) Metric when     new data is found.</li> <li>Provides a resulting CVSS-BT score for each CVE</li> </ul>"},{"location":"risk/Understanding_Risk/#epss-and-exploitation-evidence","title":"EPSS and Exploitation Evidence","text":"<p>\"If there is evidence that a vulnerability is being exploited,     then that information should supersede anything EPSS has to say,     because again, EPSS is pre-threat intel. If there is an absence of     exploitation evidence, then EPSS can be used to estimate the     probability it will be exploited.\" https://www.first.org/epss/faq</p> <p>The \"Known Evidence or Activity branch\" lists data sources where we can get that evidence of exploitation.</p>"},{"location":"risk/Understanding_Risk/#zero-days","title":"Zero Days","text":"<p>EPSS scores won\u2019t be available for Zero Days (because EPSS depends on the CVE being published and it can take several days for the associated CVE to be published) per \"The State of Exploit Development: 80% of Exploits Publish Faster than CVEs\".</p> <p>Quote</p> <p>A zero-day vulnerability is a flaw in software or hardware that is unknown to a vendor prior to its public disclosure, or has been publicly disclosed prior to a patch being made available. As soon as a zero day is disclosed and a patch is made available it, of course, joins the pantheon of known vulnerabilities. Don\u2019t go chasing zero days, patch your known vulnerabilities instead\u2026.</p> <p>Vulnerabilities increase risk, whether or not they start as zero days. We advise organizations to operate with a defensive posture by applying available patches for known, exploited vulnerabilities sooner rather than later.</p> <p>Tenable 2022 Threat Landscape Report</p> <p>Quote</p> <p>Zero day vulnerabilities made up only approximately 0.4% of vulnerabilities during the past decade.  The amount spent on trying to detect them is out of kilter with the actual risks they pose. This is compared with the massive numbers of breaches and infections that come from a small number of known vulnerabilities that are being repeatedly exploited. As a top priority, focus your efforts on patching the vulnerabilities that are being exploited in the wild or have competent compensating control(s) that can. This is an effective approach to risk mitigation and prevention, yet very few organizations do this. </p> <p>Focus on the Biggest Security Threats, Not the Most Publicized, Gartner, Nov 2017</p> <p>Takeaways</p> <ol> <li>CVSS or EPSS should not be used alone to assess risk - they can be used together:<ol> <li>CVSS Base Score is a combination of Exploitability and Impact</li> <li>Various data sources can be used as evidence of exploitation activity or likelihood of exploitation activity - but there isn't <ol> <li>a single authoritative source</li> <li>an industry standard on how to do this</li> </ol> </li> </ol> </li> <li>EPSS should be used with other exploitation evidence; if there is an absence of exploitation evidence, then EPSS can be used to estimate the probability it will be exploited.</li> <li>EPSS scores won't be available for Zero-Days</li> <li>\"Don\u2019t go chasing zero days, patch your known vulnerabilities instead\"</li> <li>It is the responsibility of the CVSS Consumer/user to populate the CVSS Exploit Maturity values i.e. unlike the CVSS Base Score, these are not provided.</li> </ol>"},{"location":"risk/Vulnerability_Landscape/","title":"Vulnerability Landscape","text":"<p>Overview</p> <p>A plot of CVE counts per year helps us understand why we need to be able to effectively prioritize CVEs (by Risk).</p> <p>To do that we need to understand the building blocks we have to work with.</p> <p>This section gives</p> <ol> <li>an overview of how the main relevant vulnerability standards fit together<ol> <li>for recording and ranking vulnerabilities and their exploitation status or likelihood</li> <li>the characteristics of vulnerabilities</li> </ol> </li> <li>a timeline<ol> <li>with the count, and cumulative count, of CVEs over time (based on the Published date of each CVE)</li> <li>when different standards were released</li> </ol> </li> </ol> <p> Source Code </p>"},{"location":"risk/Vulnerability_Landscape/#timeline","title":"Timeline","text":"Count of CVEs published per year CVEs published per year (cumulative), with publication dates of standards"},{"location":"risk/Vulnerability_Landscape/#vulnerability-standards","title":"Vulnerability Standards","text":"Vulnerability Landscape Main Efforts"},{"location":"risk/Vulnerability_Landscape/#key-risk-factor-standards","title":"Key Risk Factor Standards","text":"<p>Quote</p> <p>\u201cCWE is the root mistake, which can lead to a vulnerability (tracked by CVE in some cases when known), which can be exploited by an attacker (using techniques covered by CAPEC)\u201d, which can lead to a Technical Impact (or consequence), which can result in a Business Impact</p> <ul> <li> <p>\u201cCWE focuses on a type of mistake that, in conditions where exploits will succeed, could contribute to the introduction of vulnerabilities within that product.\u201d</p> </li> <li> <p>\u201cA vulnerability is an occurrence of one or more weaknesses within a product, in which the weakness can be used by a party to cause the product to modify or access unintended data, interrupt proper execution, or perform actions that were not specifically granted to the party who uses the weakness.\u201d https://cwe.mitre.org/documents/cwe_usage/guidance.html</p> </li> </ul> <p> </p> From weakness to Impact <p>Note</p> <ol> <li>A CVE may have zero or more CWEs associated with it e.g. Log4Shell CVE-2021-44228 has 4 CWEs</li> <li>A CWE may have zero or more Common Consequences/Technical Impacts associated with it e.g. Log4Shell CVE-2021-44228 has 2</li> <li>A CWE may be associated with zero or more CVEs.</li> </ol> <p>To understand MITRE CAPEC vs MITRE ATT&amp;CK, see https://capec.mitre.org/about/attack_comparison.html.</p> <p>Quote</p> <p>\u201cNVD is using CWE as a classification mechanism that differentiates CVEs by the type of vulnerability they represent.\u201d</p> <p>\u201cThe NVD makes use of a subset of the entire CWE List, which is enumerated by the CWE-1003 (Weaknesses for Simplified Mapping of Published Vulnerabilities) view. NVD analysts will associate the most specific CWE value within the CWE-1003 view based on the publicly available information at the time of analysis.\u201d https://nvd.nist.gov/vuln/cvmap/How-We-Assess-Acceptance-Levels, https://nvd.nist.gov/vuln/categories</p> <p>Takeaways</p> <ol> <li>The count of published CVEs per year is increasing at a very significant rate.</li> <li>Organizations need an effective prioritization method to know what to remediate first.</li> <li>CISA KEV is a source of vulnerabilities that have been exploited in the wild. EPSS gives the probability a vulnerability will be exploited in the wild (in the next 30 days).</li> <li>CISA SSVC is an alternative to CVSS.</li> <li>\u201cCWE is the root mistake, which can lead to a vulnerability (tracked by CVE in some cases when known), which can be exploited by an attacker (using techniques covered by CAPEC)\u201d, which can lead to a Technical Impact (or consequence), which can result in a Business Impact</li> <li>NVD uses CWE-1003 (Weaknesses for Simplified Mapping of Published Vulnerabilities)</li> <li>A CVE may have zero or more CWEs associated with it e.g. Log4Shell has 4 CWEs</li> <li>A CWE may have zero or more Common Consequences/Technical Impacts associated with it e.g. Log4Shell has 2</li> <li>A CWE may be associated with zero or more CVEs e.g. CWE-917 is associated with CVE-2023-22665, CVE-2023-41331, CVE-2023-41331, and many more (~150) other CVEs.</li> </ol>"},{"location":"vendors/EdgeScan/","title":"EdgeScan","text":"<p>Overview</p> <p>In this section we look at</p> <ul> <li>how EdgeScan uses EPSS, CVSS as part of their scoring</li> <li>what EPSS, CVSS looks like versus EdgeScan scores</li> </ul> <p> Source Code </p>"},{"location":"vendors/EdgeScan/#edgescan-data","title":"EdgeScan Data","text":"<p>TODO To Be Completed by Eoin Keary\u00a0</p> <p>EdgeScan is a PTAAS vendor....</p> <p>The data........ the CVEs detected are determined to be exploitable (but not exploited as part of a typical engagement). The PenTest is carried out remotely.</p> <p>\\~14K unique CVEs across X findings...</p>"},{"location":"vendors/EdgeScan/#analysis","title":"Analysis","text":"EdgeScan 2023 CVE Report CVSS vs EPSS EdgeScan 2023 CVE Report CVSS vs EPSS: Lower EPSS Range 0-0.1 EdgeScan 2023 CVE Report CVSS vs EPSS: Higher EPSS Range 0.1-1 <p>Observations</p> <ol> <li>The detected CVEs cover the range of CVSS BaseScores and EPSS Scores.</li> <li>The vast majority of detected CVEs have a low EPSS score near zero.</li> <li>Zooming in on the lower EPSS scores below 0.1, there's CVEs are in CISA KEV (Active), Metasploit and Nuclei (Weaponized), ExploitDB (PoC). Though the vast majority are not.</li> <li>Zooming in on the higher EPSS scores above 0.1, there's a concentration of CVEs above EPSS 0.9 that are in CISA KEV (Active), Metasploit and Nuclei (Weaponized), ExploitDB (PoC)</li> <li>Given these CVEs are determined to be exploitable, this suggests </li> </ol> <p>Info</p> <ol> <li>The dot colors indicate what population the CVE is associated with e.g. if the CVE is red, then it's in CISA KEV:<ol> <li>red: CISA KEV</li> <li>purple: both metasploit and nuclei</li> <li>orange: metasploit only</li> <li>yellow: nuclei only</li> <li>green: exploitdb only, and not in metasploit or nucle</li> </ol> </li> <li>The histogram on top represents the counts of CVEs (in bins) at that CVSS BaseScore.</li> <li>The histogram on the right represents the counts of CVEs (in bins) at that EPSS Score.</li> </ol> <p>Takeaways</p> <ol> <li>TODO</li> </ol>"},{"location":"vendors/Microsoft_Exploitability_Index/","title":"Microsoft Exploitability Index","text":"<p>Overview</p> <p>In this section we look at</p> <ul> <li>Microsoft Exploitability Index </li> <li>what EPSS looks like versus Microsoft Exploitability Index ratings</li> </ul> <p> Source Code </p> <p>Info</p> <p>The Exploitability Index may help customers evaluate risk for a vulnerability. Microsoft evaluates the potential exploitability of each vulnerability associated with a Microsoft security update and then publishes the exploitability information as part of the monthly Microsoft security update details. If after publishing the details Microsoft determines that the Exploitability Index Assessment warrants a change, it will change the assessment and notify customers through technical security notifications. The company will not update the assessment when exploit code is posted that matches the existing exploitability information.</p> <p>Data is found within each CVE link published on the Microsoft Security Update Guide\u00a0and there is an official\u00a0API also.</p>"},{"location":"vendors/Microsoft_Exploitability_Index/#analysis","title":"Analysis","text":"Microsoft Exploitability Index \"msei\" CVSS vs EPSS <p>The counts of Microsoft Exploitability Index Assessment values are as follows:</p> Microsoft Exploitability Index Assessment Value Short definition Count 0 Exploitation detected 5 1 Exploitation more likely 24 2 Exploitation less likely 163 3 Exploitation unlikely 3 - Value not given for CVE 38 <p>For \"Exploitation Detected\" the CVE and EPSS scores are:</p> CVE EPSS Notes CVE-2023-36761 0.57125 Affects Microsoft Word with Network Attack Vector CVE-2023-44487 0.52748 Affects Microsoft HTTP/2 with Network Attack Vector CVE-2023-41763 0.1584 Affects Skype for Business with Network Attack Vector CVE-2023-36563 0.00332 Affects Microsoft WordPad with Network Attack Vector CVE-2023-36802 0.00054 Affects Microsoft Streaming Service Proxy Local Attack Vector <p>Observations</p> <ol> <li> <p>The 5 CVEs with \"Exploitation Detected\" are in CISA KEV</p> <ol> <li>2 of these have an EPSS value &gt; 0.5</li> <li>2 of these have an EPSS value near 0</li> </ol> </li> <li> <p>There isn't an exact mapping of MSEI Exploitability Index levels but this would be a loose mapping:</p> MSIE Value Risk Taxonomy Exploitation Detected Known Actively Exploited in the wild Exploitation more likely Weaponized Exploit Exploitation less likely Proof Of Concept Exploit Exploitation unlikely No Known Exploit </li> </ol> <p>Takeaways</p> <ol> <li>Evidence of exploitation (MSIE Exploitation Detected, CISA KEV in this case) trumps EPSS scores</li> <li>Depending on your security posture, you may decide to extend this to \"Exploitation more likely\" <ol> <li>e.g. MSIE \"Exploitation more likely\" trumps EPSS. </li> <li>In this case, the population of \"Exploitation more likely\" is relatively small compared to \"Exploitation less likely\" plus \"Exploitation unlikely\".</li> </ol> </li> </ol> <p>Quote</p> <p>\"If there is evidence that a vulnerability is being exploited, then that information should supersede anything EPSS has to say, because again, EPSS is pre-threat intel. If there is an absence of exploitation evidence, then EPSS can be used to estimate the probability it will be exploited.\" https://www.first.org/epss/faq</p>"},{"location":"vendors/Qualys/","title":"Qualys","text":"<p>Overview</p> <p>In this section we look at</p> <ul> <li>Qualys scoring based on their public posts</li> <li>Qualys scores</li> </ul> <p> Source Code </p>"},{"location":"vendors/Qualys/#qualys-articles","title":"Qualys Articles","text":"<p>These articles are worth reading in full - below are some insightful extracts.</p>"},{"location":"vendors/Qualys/#in-depth-look-into-data-driven-science-behind-qualys-trurisk","title":"In-Depth Look Into Data-Driven Science Behind Qualys TruRisk","text":"<p>Quote</p> <p>Qualys TruRisk is hyper focused on three attributes: exploit availability, evidence of exploitation in the wild, and likelihood of exploitation. This helps organizations focus on the highest risk vulnerabilities.</p> <p>QVS scores consistently place vulnerabilities with evidence of exploitation, such as CISA known vulnerabilities, in a higher score range even if the EPSS score is low</p> <p>Qualys TruRisk rates less than 1% of vulnerabilities as critical, and less than 7% of vulnerabilities as high. This drastically reduces the number of vulnerabilities (up to 85% fewer compared to CVSS which ranks 51% of vulnerabilities high or critical) that organizations need to focus on to reduce risk</p> <p>The QDS algorithm rates weaponized exploits higher than PoC exploits.</p> <p> Qualys QDS/QVS Range and factors (this predates inclusion of EPSS) </p> <p>In-Depth Look Into Data-Driven Science Behind Qualys TruRisk, October 10, 2022</p>"},{"location":"vendors/Qualys/#an-in-depth-look-at-the-latest-vulnerability-threat-landscape","title":"An In-Depth Look at the Latest Vulnerability Threat Landscape","text":"<p>Quote</p> <p>Organizations considering the implementation of risk-based vulnerability management should incorporate EPSS as one of the criteria for prioritization. However, similar to CISA KEV, it would be imprudent to rely solely on EPSS for prioritization as it may overlook high-risk vulnerabilities or those being exploited in the wild.</p> <p>Qualys VMDR, in tandem with TruRisk, utilizes EPSS scores as part of the scoring algorithm to consistently rank CVEs with a high likelihood of exploitation within the critical range.</p> <p>Even if a vulnerability has a weaponized exploit available, it is assigned a High level of criticality. The underlying assumption being attackers could use it at any point in time. As more evidence of exploitation becomes available, the score is further increased.</p> <p>The prioritization of vulnerabilities should be a multifaceted approach. The focus should be given to those known to be exploited in the wild (CISA KEV), those with a high likelihood of exploitation (indicated by a high EPSS score), and those with weaponized exploit code available</p> <p>Part 1: An In-Depth Look at the Latest Vulnerability Threat Landscape, July 11, 2023 </p>"},{"location":"vendors/Qualys/#2023-qualys-trurisk-research-report","title":"2023 Qualys TruRisk Research Report","text":"<p>Quote</p> <p>The most exploited vulnerabilities are CVE-2022-30190 (Follina); CVE-2022-26134 (Atlassian); CVE-2022-22954 (VMware); CVE-2022-1040 (Sophos Firewall); and CVE-2022-24521 (Windows). The first four all have a Qualys vulnerability score (QVS) of 100; the last scores 95. All five have been used in ransomware attacks, and all five are included within CISA\u2019s KEV list.</p> <p>2023 Qualys TruRisk Research Report</p> CVE EPSS Notes CVE-2022-30190 0.9683 Windows Follina vulnerability CVE-2022-26134 0.9753 Atlassian Confluence Remote Code Execution Vulnerability CVE-2022-22954 0.9735 VMware Workspace ONE Access and Identity Manager contain a remote code execution vulnerability due to server-side template injection. CVE-2022-1040 0.9707 Sophos Firewall Authentication Bypass CVE-2022-24521 0.05% Windows CLFS Driver Privilege Escalation Vulnerability - Local Attack Vector <p>Several other examples of vulnerabilities with low EPSS scores and high TruRisk scores are given in In-Depth Look Into Data-Driven Science Behind Qualys TruRisk, October 10, 2022.</p>"},{"location":"vendors/Qualys/#analysis-qualys-qvs-scores-vs-epss","title":"Analysis: Qualys QVS Scores vs EPSS","text":"Qualys 2023 Qualys TruRisk Research Report Top 163 CVEs QVS vs EPSS <p>Observations</p> <ol> <li>The higher scoring for \"Evidence of exploitation in the wild\" per     CISA KEV is very clear (red)</li> <li>The scoring for weaponized exploits (Metasploit, Nuclei) is very clear     (orange, purple)</li> <li>For QVS &gt; 90, there aren't any cases where EPSS is the only     determinant of the QVS score i.e. for most of these CVEs, the other     conditions are met i.e. \"Evidence of exploitation in the wild\" per     CISA KEV, and functional exploit code available.</li> <li>Most of the CVEs have a low EPSS score.</li> </ol> <p>Info</p> <ol> <li>The dot colors indicate what population the CVE is associated with e.g. if the CVE is red, then it's in CISA KEV:<ol> <li>red: CISA KEV</li> <li>purple: both metasploit and nuclei</li> <li>orange: metasploit only</li> <li>yellow: nuclei only</li> <li>green: exploitdb only, and not in metasploit or nucle</li> </ol> </li> <li>The histogram on top represents the counts of CVEs (in bins) at that QVS Score.</li> <li>The histogram on the right represents the counts of CVEs (in bins) at that EPSS Score.</li> </ol> <p> </p> Qualys 2023 Qualys TruRisk Research Report Top 163 CVEs QVS vs CVSS Base Score <p>Observations</p> <ol> <li>Even Critical CVEs may be scored lower (~70) by Qualys e.g. those that are not known to be exploited in the wild or have weaponized exploit available.</li> <li>The CVE with QVS 95 and CVSS score 0 is CVE-2022-28958 which was rejected because it wasn't actually a vulnerability and it was removed from CISA KEV Dec 2023 </li> </ol>"},{"location":"vendors/Qualys/#comparison-of-cves-with-qualys-qvs-and-epss-scores","title":"Comparison of CVEs with Qualys QVS and EPSS Scores","text":"<p>The Qualys Vulnerability Score (QVS) is a Qualys-assigned score for a vulnerability based on multiple factors associated with the CVE such as CVSS and external threat indicators like active exploitation, exploit code maturity, CISA known exploitable and many more.  </p> <p>The QVS score was retrieved from Qualys for 215,382 CVE's. Of those, 214,604 had a QVS score assigned to them. This chart shows the comparison of the Qualys QVS scores and the EPSS scoring for those CVEs and the reason for the unscored CVEs by Qualys.\u00a0  </p> <p>See Original post</p> <p></p> Qualys QVS vs EPSS   <p>Takeaways</p> <ol> <li>\"The focus should be given to CVEs known to be exploited in the wild (CISA KEV), those with a high likelihood of exploitation (indicated by a high EPSS score), and those with weaponized exploit code available\"</li> <li>The Qualys scoring / priority for \"Likelihood of Exploit\" factors is in this order<ol> <li>known to be exploited in the wild </li> <li>weaponized exploits </li> <li>PoC exploits.</li> </ol> </li> <li>The Qualys scoring / priority combines CVSS Base Score rating with likelihood of exploitation for all score bands. Even Critical CVEs may be scored lower (~70) by Qualys </li> <li>Other evidence of exploitation trumps EPSS in the case of low EPSS scores consistent with using EPSS When There is No Other Evidence of Exploitation.</li> <li>Some known exploited CVEs listed in 2023 Qualys TruRisk Research Report (even in the top 5 of the top 163) have low EPSS scores</li> </ol>"},{"location":"vendors/vendors/","title":"Vendors","text":"<p>Overview</p> <p>Different tool vendors use different vulnerability scoring/ranking methods; some use EPSS.</p> <p>A full list of vendors using EPSS is given in List of Vendors using EPSS. This section of the guide</p> <ul> <li>lists a selection of vendors using EPSS</li> <li>details how some vendors are using EPSS</li> </ul> <p>A lot of vendors support EPSS in their products, but don't say/know how to apply it, and so there's a need for a guide like this.</p> Vendor Scoring Uses EPSS as part of scoring Qualys Qualys Vulnerability Score (QVS) is a Qualys-assigned score for a vulnerability based on multiple factors associated with the CVE such as CVSS and external threat indicators like active exploitation, exploit code maturity, and many more. \u2705 Cisco https://blogs.cisco.com/security/epss-and-its-role-in-cisco-vulnerability-management-risk-scoring. Kenna Security Vulnerability Risk Score \u2705 Tenable Tenable Vulnerability Priority Rating (VPR) uses the severity and the facility to be exploited, similar to EPSS. See also https://www.tenable.com/blog/you-cant-fix-everything-how-to-take-a-risk-informed-approach-to-vulnerability-remediation Snyk Snyk created their own score (Snyk Priority Score) for prioritization by using CVSS and other factors mentioned above, such as exploit maturity, remediation process, or mentions in the community  https://snyk.io/blog/improved-risk-assessment-with-epss-scores-in-snyk/  https://snyk.io/blog/whats-so-wild-about-exploits-in-the-wild-and-how-can-we-prioritize-accordingly https://snyk.io/blog/introducing-new-risk-score/ https://docs.snyk.io/scan-with-snyk/find-and-manage-priority-issues/priority-score MicroSoft The Exploitability Index may help customers evaluate risk for a vulnerability. Microsoft evaluates the potential exploitability of each vulnerability associated with a Microsoft security update and then publishes the exploitability information as part of the monthly Microsoft security update details Rapid7 Rapid7 created a proprietary scoring methodology called Active Risk. It \"takes into account the latest version of the CVSS available for a vulnerability and enriches it with multiple threat intelligence feeds, including proprietary Rapid7 research, to provide security teams with a threat-aware vulnerability risk score.\" Data sources include: CISA KEV, Metasploit, Rapid7's Project Heisenberg and AttackerKB. https://www.rapid7.com/products/insightvm/features/active-risk-score/  https://www.rapid7.com/blog/post/2023/09/25/introducing-active-risk/ Wiz.io Created their own binning for EPSS \"to ensure even distribution between critical, high, and medium severities\" \u2705 Edgescan EPSS is visible as a floating point score (0.00) alongside CVSS, CISAKEV (boolean) and EVSS (Edgescan Validated Security Score).  Edgescan has also implemented an overall priority score combining CVSS, EPSS and CISA KEV with some weightings to deliver an overall priority score, we call this the Edgescan eXposure Factor (EXF). https://www.edgescan.com/solutions/risk-based-vulnerability-management-rbvm/ \u2705 Mend.io SCA tool shows CVSS score, EPSS score, and public exploits per https://docs.mend.io/bundle/sca_user_guide/page/public_exploits_in_mend_sca.html <p>Warning</p> <p>This data is subject to change as vendors add more support for EPSS. Check vendor documentation.</p>"}]}